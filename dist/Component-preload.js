/**
* This file was auto-generated by SAP Web IDE build and includes all
* the source files required by SAPUI5 runtime for performance optimization.
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.
*/
jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "com/sap/revgrp/Component-preload",
	"modules": {
		"com/sap/revgrp/model/formatter.js": "sap.ui.define([\n\t\"com/sap/revgrp/model/formatter\",\n\t\"sap/ui/core/format/DateFormat\"\n], function(formatter, DateFormat) {\n\t\"use strict\";\n\n\treturn {\n\n\t\tdate: function(value) {\n\n\t\t\tif (value) {\n\t\t\t\tvar oDateFormat = sap.ui.core.format.DateFormat.getDateTimeInstance({\n\t\t\t\t\t\n\t\t\t\t\tstyle: \"medium\"\n\t\t\t\t});\n\t\t\t\treturn oDateFormat.format(new Date(value));\n\t\t\t} else {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t},\n\n\t\tcurrencyValue: function(sValue) {\n\t\t\tif (!sValue) {\n\t\t\t\treturn \"\";\n\t\t\t}\n\n\t\t\treturn parseFloat(sValue).toFixed(2);\n\t\t}\n\t};\n\n});",
		"com/sap/revgrp/controller/BaseController.js": "/*global history */\nsap.ui.define([\n\t\"sap/ui/core/mvc/Controller\",\n\t\"sap/ui/core/routing/History\"\n], function(Controller, History) {\n\t\"use strict\";\n\n\treturn Controller.extend(\"com.sap.revgrp.controller.BaseController\", {\n\t\t/**\n\t\t * Convenience method for accessing the router in every controller of the application.\n\t\t * @public\n\t\t * @returns {sap.ui.core.routing.Router} the router for this component\n\t\t */\n\t\tgetRouter: function() {\n\t\t\treturn this.getOwnerComponent().getRouter();\n\t\t},\n\n\t\t/**\n\t\t * Convenience method for getting the view model by name in every controller of the application.\n\t\t * @public\n\t\t * @param {string} sName the model name\n\t\t * @returns {sap.ui.model.Model} the model instance\n\t\t */\n\t\tgetModel: function(sName) {\n\t\t\treturn this.getView().getModel(sName);\n\t\t},\n\n\t\t/**\n\t\t * Convenience method for setting the view model in every controller of the application.\n\t\t * @public\n\t\t * @param {sap.ui.model.Model} oModel the model instance\n\t\t * @param {string} sName the model name\n\t\t * @returns {sap.ui.mvc.View} the view instance\n\t\t */\n\t\tsetModel: function(oModel, sName) {\n\t\t\treturn this.getView().setModel(oModel, sName);\n\t\t},\n\n\t\t/**\n\t\t * Convenience method for getting the resource bundle.\n\t\t * @public\n\t\t * @returns {sap.ui.model.resource.ResourceModel} the resourceModel of the component\n\t\t */\n\t\tgetResourceBundle: function() {\n\t\t\treturn this.getOwnerComponent().getModel(\"i18n\").getResourceBundle();\n\t\t}\n\n\t});\n\n});",
		"com/sap/revgrp/controller/AddDefect.controller.js": "sap.ui.define([\n\t\"com/sap/revgrp/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/m/MessageToast\",\n\t\"sap/m/UploadCollectionParameter\",\n\t\"com/sap/revgrp/model/formatter\",\n\t\"sap/ui/core/routing/History\"\n\n], function(BaseController, JSONModel, MessageToast, UploadCollectionParameter, formatter, History) {\n\t\"use strict\";\n\n\treturn BaseController.extend(\"com.sap.revgrp.controller.AddDefect\", {\n\t\tformatter: formatter,\n\n\t\tonInit: function() {\n\n\t\t\tvar oViewAddDefectModel = new JSONModel();\n\t\t\tvar oRouter = this.getRouter();\n\n\t\t\toRouter.getRoute(\"addDefect\").attachPatternMatched(this._onRouteMatched, this);\n\t\t\t// this._oRouter = sap.ui.core.UIComponent.getRouterFor(this);\n\t\t\t// this._oRouter.attachRouteMatched(this._onRouteMatched, this);\n\n\t\t\tthis.setModel(oViewAddDefectModel, \"AddDefectContainer\");\n\n\t\t\t// Defect Model Copy\n\t\t\tthis.oAddedDefectsModel = new JSONModel();\n\t\t\tthis.getView().setModel(this.oAddedDefectsModel, \"addDefectData\");\n\n\t\t\t// Set Initial Value\n\t\t\tthis.oDefectCodeSet = this.byId(\"DefectCodeSet\");\n\t\t\tthis.DefectLocCodeSet = this.byId(\"DefectLocCodeSet\");\n\t\t\tthis.oUploadItems = new sap.m.UploadCollection();\n\n\t\t},\n\n\t\t_onRouteMatched: function(oEvent) {\n\n\t\t\tvar oArgs, oView;\n\t\t\toArgs = oEvent.getParameter(\"arguments\");\n\t\t\toView = this.getView();\n\n\t\t\tthis.getModel().metadataLoaded().then(function() {\n\t\t\t\tvar sObjectPath = this.getModel().createKey(\"DefectResultSet\", {\n\n\t\t\t\t\tFenum: oArgs.Fenum,\n\t\t\t\t\tPrueflos: oArgs.Prueflos,\n\t\t\t\t\tWerk: oArgs.Werk,\n\t\t\t\t\tVornr: oArgs.Vornr,\n\t\t\t\t\tMerknr: oArgs.Merknr,\n\t\t\t\t\tAufnr: oArgs.Aufnr,\n\t\t\t\t\tMatnr: oArgs.Matnr\n\n\t\t\t\t});\n\t\t\t\tthis._bindView(\"/\" + sObjectPath);\n\t\t\t}.bind(this));\n\t\t},\n\n\t\t_bindView: function(sObjectPath) {\n\t\t\t// Set busy indicator during view binding\n\t\t\tvar oViewModel = this.getModel(\"AddDefectContainer\");\n\n\t\t\t// If the view was not bound yet its not busy, only if the binding requests data it is set to busy again\n\t\t\t// oViewModel.setProperty(\"/busy\", false);\n\n\t\t\tthis.getView().bindElement({\n\t\t\t\tpath: sObjectPath,\n\t\t\t\tevents: {\n\t\t\t\t\tchange: this._onBindingChange.bind(this),\n\t\t\t\t\tdataRequested: function() {\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", true);\n\t\t\t\t\t},\n\t\t\t\t\tdataReceived: function() {\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t_onBindingChange: function() {\n\n\t\t\tvar oObject = this.getView().getElementBinding().getBoundContext().getObject();\n\t\t\tvar oElementBinding = this.getView().getElementBinding();\n\t\t\tvar sPath = oElementBinding.getBoundContext().getPath();\n\n\t\t\tvar oAddedDefect = this.getView().getModel(\"addDefectData\");\n\t\t\tvar oDefectObject = oAddedDefect.getObject(sPath);\n\t\t\t// need to add \n\t\t\tif (oDefectObject === undefined) {\n\t\t\t\t// update DefectCodeSet\n\t\t\t\tvar oDefCodeSet = this.oDefectCodeSet.getValue();\n\t\t\t\tif (oDefCodeSet !== \"\") {\n\t\t\t\t\tthis.oDefectCodeSet.setValue(\"\");\n\t\t\t\t}\n\n\t\t\t\tvar oDefLocCodeSet = this.DefectLocCodeSet.getValue();\n\t\t\t\tif (oDefLocCodeSet !== \"\") {\n\t\t\t\t\tthis.DefectLocCodeSet.setValue(\"\");\n\t\t\t\t}\n\n\t\t\t\toAddedDefect.setProperty(sPath, oObject);\n\t\t\t}\n\n\t\t\t// No data for the binding\n\t\t\tif (!oElementBinding.getBoundContext()) {\n\t\t\t\tthis.getRouter().getTargets().display(\"detailObjectNotFound\");\n\t\t\t\t// if object could not be found, the selection in the master list\n\t\t\t\t// does not make sense anymore.\n\t\t\t\tthis.getOwnerComponent().oListSelector.clearMasterListSelection();\n\t\t\t\treturn;\n\t\t\t}\n\t\t},\n\t\tOnSelectionLocationChanged: function(oEvent) {\n\n\t\t\tvar ochangedItem = oEvent.getParameters(\"selectionChange\").selectedItem;\n\t\t\tvar oChangedItemKey = ochangedItem.getKey();\n\t\t\tvar oChangedCodeGroup = ochangedItem.getProperty(\"additionalText\");\n\n\t\t\t//Get current Model and Object Value\n\t\t\tvar oItem = oEvent.getSource();\n\t\t\tvar oContext = oItem.getBindingContext();\n\t\t\tvar sPath = oContext.getPath();\n\t\t\tvar sObject = oContext.getModel().getProperty(sPath);\n\t\t\tsObject.CodeDefLoc = oChangedItemKey;\n\t\t\tsObject.CodeGrpDefLoc = oChangedCodeGroup;\n\n\t\t\t//update Context with update value\n\t\t\tvar oModel = oContext.getModel();\n\t\t\toModel.setProperty(sPath, sObject);\n\t\t},\n\n\t\tOnSelectionDefectChanged: function(oEvent) {\n\n\t\t\tvar ochangedItem = oEvent.getParameters(\"selectionChange\").selectedItem;\n\t\t\tvar oChangedItemKey = ochangedItem.getKey();\n\t\t\tvar oChangedCodeGroup = ochangedItem.getProperty(\"additionalText\");\n\n\t\t\t//Get current Model and Object Value\n\t\t\tvar oItem = oEvent.getSource();\n\t\t\tvar oContext = oItem.getBindingContext();\n\t\t\tvar sPath = oContext.getPath();\n\t\t\tvar sObject = oContext.getModel().getProperty(sPath);\n\t\t\tsObject.CodeDefect = oChangedItemKey;\n\t\t\tsObject.CodeGrpDefect = oChangedCodeGroup;\n\n\t\t\t//update Context with update value\n\t\t\tvar oModel = oContext.getModel();\n\t\t\toModel.setProperty(sPath, sObject);\n\t\t},\n\n\t\tonUploadComplete: function(oEvent) {\n\n\t\t\tvar Attach = {};\n\t\t\t//var oUploadItems = new sap.m.UploadCollection();\n\t\t\t// var oUploadItem = new sap.m.UploadCollectionItem();\n\t\t\tvar oView = this.getView().byId(\"UploadCollection\");\n\t\t\tvar oContext = oView.getBindingContext();\n\t\t\tvar oModel = oContext.getModel();\n\t\t\tvar sPath = oContext.getPath();\n\t\t\tvar sObject = oContext.getObject(sPath);\n\n\t\t\t// Get File Name\n\t\t\tvar sUploadfile = oEvent.getParameter(\"files\")[0];\n\t\t\tvar sFilename = sUploadfile.fileName;\n\n\t\t\tAttach = {\n\t\t\t\t\"Prueflos\": sObject.Prueflos,\n\t\t\t\t\"Werk\": sObject.Werk,\n\t\t\t\t\"Vornr\": sObject.Vornr,\n\t\t\t\t\"Fenum\": sObject.Fenum,\n\t\t\t\t\"Aufnr\": sObject.Aufnr,\n\t\t\t\t\"Matnr\": sObject.Matnr,\n\t\t\t\t\"Merknr\": sObject.Merknr,\n\t\t\t\t\"Mimetype\": \"\",\n\t\t\t\t\"Content\": sFilename\n\n\t\t\t};\n\n\t\t\t//sObject.Attachment = Attach;\n\t\t\t//oModel.setProperty(sPath, sObject);\n\n\t\t},\n\n\t\tonStartUpload: function(oEvent) {\n\n\t\t\tvar oUploadCollection = this.getView().byId(\"UploadCollection\");\n\t\t\tvar oFiles = oUploadCollection.getItems().length;\n\t\t\tvar uploadInfo = \"\";\n\n\t\t\toUploadCollection.upload();\n\n\t\t\tuploadInfo = oFiles + \" file(s)\";\n\n\t\t\tMessageToast.show(\"Method Upload is called (\" + uploadInfo + \")\");\n\t\t\tsap.m.MessageBox.information(\"Uploaded \" + uploadInfo);\n\n\t\t},\n\n\t\tonTypeMissmatch: function(oEvent) {\n\n\t\t\tvar aFileTypes = oEvent.getSource().getFileType();\n\t\t\tjQuery.each(aFileTypes, function(key, value) {\n\t\t\t\taFileTypes[key] = \"*.\" + value;\n\t\t\t});\n\n\t\t\tvar sSupportedFileTypes = aFileTypes.join(\", \");\n\n\t\t\tMessageToast.show(\"The file type *.\" + oEvent.getParameter(\"fileType\") + \" is not supported. Choose one of the types:\" +\n\t\t\t\tsSupportedFileTypes);\n\t\t},\n\n\t\tonBeforeUploadStarts: function(oEvent) {\n\n\t\t\t// Header Slug\n\t\t\tvar oCustomerHeaderSlug = new sap.m.UploadCollectionParameter({\n\t\t\t\tname: \"slug\",\n\t\t\t\tvalue: oEvent.getParameter(\"fileName\")\n\t\t\t});\n\t\t\toEvent.getParameters().addHeaderParameter(oCustomerHeaderSlug);\n\n\t\t},\n\n\t\tonChange: function(oEvent) {\n\n\t\t\tvar oView = this.getView().byId(\"UploadCollection\");\n\t\t\tvar oModel = oView.getModel();\n\n\t\t\tvar UploadUrl = oEvent.getSource().getUploadUrl();\n\t\t\toModel._UploadUrl = UploadUrl;\n\n\t\t\t// Get CRSF Token\n\t\t\tsap.ui.getCore().setModel(oModel);\n\t\t\tvar oRequest = sap.ui.getCore().getModel().getSecurityToken();\n\n\t\t\tvar oUploadCollection = oEvent.getSource();\n\n\t\t\t// Header Token \n\t\t\tvar oCustomerHeaderToken = new UploadCollectionParameter({\n\t\t\t\tname: \"x-csrf-token\",\n\t\t\t\tvalue: oRequest\n\t\t\t});\n\n\t\t\toUploadCollection.addHeaderParameter(oCustomerHeaderToken);\n\n\t\t},\n\n\t\tonNavBack: function(oEvent) {\n\t\t\tvar oHistory, sPreviousHash;\n\n\t\t\toHistory = History.getInstance();\n\t\t\tsPreviousHash = oHistory.getPreviousHash();\n\n\t\t\tif (sPreviousHash !== undefined) {\n\t\t\t\thistory.go(-1);\n\t\t\t} else {\n\t\t\t\t// this.getRouter().navTo(\"master\", {}, true);\n\t\t\t\tvar oItem;\n\n\t\t\t\toItem = oEvent.getSource();\n\n\t\t\t\tvar sPrueflos = oItem.getBindingContext().getProperty(\"Prueflos\");\n\t\t\t\tvar sVornr = oItem.getBindingContext().getProperty(\"Vornr\");\n\t\t\t\tvar sMerknr = oItem.getBindingContext().getProperty(\"Merknr\");\n\t\t\t\tvar sAufnr = oItem.getBindingContext().getProperty(\"Aufnr\");\n\t\t\t\tvar sMatnr = oItem.getBindingContext().getProperty(\"Matnr\");\n\t\t\t\tvar sFenum = oItem.getBindingContext().getProperty(\"Fenum\");\n\n\t\t\t\tthis.getRouter().navTo(\"defects\", {\n\t\t\t\t\tFenum: sFenum,\n\t\t\t\t\tPrueflos: sPrueflos,\n\t\t\t\t\tVornr: sVornr,\n\t\t\t\t\tMerknr: sMerknr,\n\t\t\t\t\tAufnr: sAufnr,\n\t\t\t\t\tMatnr: sMatnr\n\t\t\t\t}, true);\n\n\t\t\t}\n\t\t},\n\n\t\tbuildFileDescriptorObject: function(v) {\n\n\t\t\tvar ofileUploader = this.getView().byId(\"fileuploader\");\n\t\t\tvar oDomRef = ofileUploader.getFocusDomRef();\n\t\t\tvar sfile = oDomRef.files[0];\n\n\t\t\tvar d = new Date();\n\n\t\t},\n\n\t\tonSaveDefectButtonPressed: function(oEvent) {\n\n\t\t\t// Collect Attachments\n\n\t\t\tvar i;\n\n\t\t\tvar sQuantity = this.getView().byId(\"Quantity\").getValue();\n\t\t\tvar sMaschine = this.getView().byId(\"Comments\").getValue();\n\n\t\t\t// Upadte current Model and Object Value\n\t\t\tvar oDefectItem = oEvent.getSource();\n\t\t\tvar oDefectContext = oDefectItem.getBindingContext();\n\t\t\tvar sDefectPath = oDefectContext.getPath();\n\t\t\tvar sDefectObject = oDefectContext.getModel().getProperty(sDefectPath);\n\t\t\tsDefectObject.DefectQty = sQuantity;\n\t\t\tsDefectObject.Maschine = sMaschine;\n\n\t\t\t//update Context with update value\n\t\t\tvar oContext = this.getView().getBindingContext();\n\t\t\tvar oModel = oContext.getModel();\n\t\t\toModel.setProperty(sDefectPath, sDefectObject);\n\n\t\t\t// Once Data has been updated, navigate to previous screen\n\n\t\t\tvar sPrueflos = oDefectItem.getBindingContext().getProperty(\"Prueflos\");\n\t\t\tvar sVornr = oDefectItem.getBindingContext().getProperty(\"Vornr\");\n\t\t\tvar sMerknr = oDefectItem.getBindingContext().getProperty(\"Merknr\");\n\t\t\tvar sAufnr = oDefectItem.getBindingContext().getProperty(\"Aufnr\");\n\t\t\tvar sMatnr = oDefectItem.getBindingContext().getProperty(\"Matnr\");\n\t\t\tvar sFenum = oDefectItem.getBindingContext().getProperty(\"Fenum\");\n\n\t\t\t// var oDefectCodeComboBox = this.getView().byId(\"DefectCodeSet\");\n\t\t\t// oDefectCodeComboBox.setValue(\"\");\n\n\t\t\t// var oDefectLocComboBox = this.getView().byId(\"DefectLocCodeSet\");\n\t\t\t// oDefectLocComboBox.setValue(\"\");\n\n\t\t\tthis.getRouter().navTo(\"defects\", {\n\t\t\t\tFenum: sFenum,\n\t\t\t\tPrueflos: sPrueflos,\n\t\t\t\tVornr: sVornr,\n\t\t\t\tMerknr: sMerknr,\n\t\t\t\tAufnr: sAufnr,\n\t\t\t\tMatnr: sMatnr\n\t\t\t}, true);\n\n\t\t}\n\n\t});\n});",
		"com/sap/revgrp/controller/Master.controller.js": "/*global history */\nsap.ui.define([\n\t\"com/sap/revgrp/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/model/Filter\",\n\t\"sap/ui/model/FilterOperator\",\n\t\"sap/m/GroupHeaderListItem\",\n\t\"sap/ui/Device\",\n\t\"com/sap/revgrp/model/formatter\"\n], function(BaseController, JSONModel, Filter, FilterOperator, GroupHeaderListItem, Device, formatter) {\n\t\"use strict\";\n\n\treturn BaseController.extend(\"com.sap.revgrp.controller.Master\", {\n\n\t\tformatter: formatter,\n\n\t\tonInit: function() {\n\t\t\t// Control state model\n\t\t\tvar oList = this.byId(\"list\"),\n\t\t\t\toViewModel = this._createViewModel(),\n\t\t\t\t// Put down master list's original value for busy indicator delay,\n\t\t\t\t// so it can be restored later on. Busy handling on the master list is\n\t\t\t\t// taken care of by the master list itself.\n\t\t\t\tiOriginalBusyDelay = oList.getBusyIndicatorDelay();\n\n\t\t\tthis._oList = oList;\n\t\t\t// keeps the filter and search state\n\t\t\tthis._oListFilterState = {\n\t\t\t\taFilter: [],\n\t\t\t\taSearch: []\n\t\t\t};\n\n\t\t\tthis.setModel(oViewModel, \"masterView\");\n\t\t\t// Make sure, busy indication is showing immediately so there is no\n\t\t\t// break after the busy indication for loading the view's meta data is\n\t\t\t// ended (see promise 'oWhenMetadataIsLoaded' in AppController)\n\t\t\toList.attachEventOnce(\"updateFinished\", function() {\n\t\t\t\t// Restore original busy indicator delay for the list\n\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\n\t\t\t});\n\n\t\t\tthis.getView().addEventDelegate({\n\t\t\t\tonBeforeFirstShow: function() {\n\t\t\t\t\tthis.getOwnerComponent().oListSelector.setBoundMasterList(oList);\n\t\t\t\t}.bind(this)\n\t\t\t});\n\n\t\t\tthis.getRouter().getRoute(\"master\").attachPatternMatched(this._onMasterMatched, this);\n\t\t\tthis.getRouter().attachBypassed(this.onBypassed, this);\n\t\t},\n\n\t\tonUpdateFinished: function(oEvent) {\n\t\t\t// update the master list object counter after new data is loaded\n\t\t\tthis._updateListItemCount(oEvent.getParameter(\"total\"));\n\t\t\t// hide pull to refresh if necessary\n\t\t\tthis.byId(\"pullToRefresh\").hide();\n\t\t},\n\n\t\t/**\n\t\t * Event handler for the master search field. Applies current\n\t\t * filter value and triggers a new search. If the search field's\n\t\t * 'refresh' button has been pressed, no new search is triggered\n\t\t * and the list binding is refresh instead.\n\t\t * @param {sap.ui.base.Event} oEvent the search event\n\t\t * @public\n\t\t */\n\t\tonSearch: function(oEvent) {\n\t\t\tif (oEvent.getParameters().refreshButtonPressed) {\n\t\t\t\t// Search field's 'refresh' button has been pressed.\n\t\t\t\t// This is visible if you select any master list item.\n\t\t\t\t// In this case no new search is triggered, we only\n\t\t\t\t// refresh the list binding.\n\t\t\t\tthis.onRefresh();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar sQuery = oEvent.getParameter(\"query\");\n\n\t\t\tthis.searchScanValue(sQuery);\n\n\t\t\t// if (sQuery) {\n\t\t\t// \tthis._oListFilterState.aSearch = [new Filter(\"Aufnr\", FilterOperator.Contains, sQuery)];\n\t\t\t// } else {\n\t\t\t// \tthis._oListFilterState.aSearch = [];\n\t\t\t// }\n\t\t\t// this._applyFilterSearch();\n\n\t\t},\n\n\t\t// searchScanValue: function(sQuery) {\n\n\t\t// \tif (sQuery) {\n\t\t// \t\tthis._oListFilterState.aSearch = [new Filter(\"Aufnr\", FilterOperator.Contains, sQuery)];\n\t\t// \t} else {\n\t\t// \t\tthis._oListFilterState.aSearch = [];\n\t\t// \t}\n\t\t// \tthis._applyFilterSearch();\n\n\t\t// },\n\n\t\tonRefresh: function() {\n\t\t\tthis._oList.getBinding(\"items\").refresh();\n\t\t},\n\n\t\tonSelectionChange: function(oEvent) {\n\t\t\t// get the list item, either from the listItem parameter or from the event's source itself (will depend on the device-dependent mode).\n\t\t\tthis._showDetail(oEvent.getParameter(\"listItem\") || oEvent.getSource());\n\t\t},\n\n\t\tonBypassed: function() {\n\t\t\tthis._oList.removeSelections(true);\n\t\t},\n\n\t\tcreateGroupHeader: function(oGroup) {\n\t\t\treturn new GroupHeaderListItem({\n\t\t\t\ttitle: oGroup.text,\n\t\t\t\tupperCase: false\n\t\t\t});\n\t\t},\n\n\t\tonNavBack: function() {\n\t\t\thistory.go(-1);\n\t\t},\n\n\t\t_createViewModel: function() {\n\t\t\treturn new JSONModel({\n\t\t\t\tisFilterBarVisible: false,\n\t\t\t\tfilterBarLabel: \"\",\n\t\t\t\tdelay: 0,\n\t\t\t\ttitle: this.getResourceBundle().getText(\"masterTitleCount\", [0]),\n\t\t\t\tnoDataText: this.getResourceBundle().getText(\"masterListNoDataText\"),\n\t\t\t\tsortBy: \"Prueflos\",\n\t\t\t\tgroupBy: \"None\"\n\t\t\t});\n\t\t},\n\n\t\t_onMasterMatched: function() {\n\t\t\tthis.getOwnerComponent().oListSelector.oWhenListLoadingIsDone.then(\n\t\t\t\tfunction(mParams) {\n\t\t\t\t\tif (mParams.list.getMode() === \"None\") {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tvar sObjectId = mParams.firstListitem.getBindingContext().getProperty(\"Prueflos\");\n\t\t\t\t\tvar sVornr = mParams.firstListitem.getBindingContext().getProperty(\"Vornr\");\n\t\t\t\t\tvar sAufnr = mParams.firstListitem.getBindingContext().getProperty(\"Aufnr\");\n\t\t\t\t\tvar sMatnr = mParams.firstListitem.getBindingContext().getProperty(\"Matnr\");\n\t\t\t\t\tthis.getRouter().navTo(\"object\", {\n\t\t\t\t\t\tobjectId: sObjectId,\n\t\t\t\t\t\tVornr: sVornr,\n\t\t\t\t\t\tAufnr: sAufnr,\n\t\t\t\t\t\tMatnr: sMatnr\n\t\t\t\t\t}, true);\n\t\t\t\t}.bind(this),\n\t\t\t\tfunction(mParams) {\n\t\t\t\t\tif (mParams.error) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.getRouter().getTargets().display(\"detailNoObjectsAvailable\");\n\t\t\t\t}.bind(this)\n\t\t\t);\n\t\t},\n\n\t\tonFacetFilterOrderOpen: function(oEvent) {\n\t\t\tvar oServiceUrl = this.getView().getModel().sServiceUrl;\n\t\t\tvar oDataModel = new sap.ui.model.odata.ODataModel(oServiceUrl, true);\n\n\t\t\tif (!this.oFilterOrders) {\n\t\t\t\tthis.oFilterOrders = this.getView().byId(\"BlockingOrdersFilter\");\n\t\t\t\tthis.setModel(oDataModel);\n\t\t\t}\n\n\t\t},\n\n\t\tonFacetFilterWrkcentOpen: function(oEvent) {\n\n\t\t\tvar oServiceUrl = this.getView().getModel().sServiceUrl;\n\t\t\tvar oDataModel = new sap.ui.model.odata.ODataModel(oServiceUrl, true);\n\n\t\t\tif (!this.oFilterOrders) {\n\t\t\t\tthis.oFilterOrders = this.getView().byId(\"BlockingWorkCenterFilter\");\n\t\t\t\tthis.setModel(oDataModel);\n\t\t\t}\n\n\t\t},\n\n\t\tonFacetFilterMatnrOpen: function(oEvent) {\n\n\t\t\tvar oServiceUrl = this.getView().getModel().sServiceUrl;\n\t\t\tvar oDataModel = new sap.ui.model.odata.ODataModel(oServiceUrl, true);\n\n\t\t\tif (!this.oFilterOrders) {\n\t\t\t\tthis.oFilterOrders = this.getView().byId(\"BlockingMaterialFilter\");\n\t\t\t\tthis.setModel(oDataModel);\n\t\t\t}\n\n\t\t},\n\n\t\tonFacetFilterBatchnrOpen: function(oEvent) {\n\n\t\t\tvar oServiceUrl = this.getView().getModel().sServiceUrl;\n\t\t\tvar oDataModel = new sap.ui.model.odata.ODataModel(oServiceUrl, true);\n\n\t\t\tif (!this.oFilterOrders) {\n\t\t\t\tthis.oFilterOrders = this.getView().byId(\"BlockingBatchFilter\");\n\t\t\t\tthis.setModel(oDataModel);\n\t\t\t}\n\n\t\t},\n\n\t\t_showDetail: function(oItem) {\n\t\t\tvar bReplace = !Device.system.phone;\n\n\t\t\tvar sObjectId = oItem.getBindingContext().getProperty(\"Prueflos\");\n\t\t\tvar sVornr = oItem.getBindingContext().getProperty(\"Vornr\");\n\t\t\tvar sAufnr = oItem.getBindingContext().getProperty(\"Aufnr\");\n\t\t\tvar sMatnr = oItem.getBindingContext().getProperty(\"Matnr\");\n\n\t\t\tthis.getRouter().navTo(\"object\", {\n\t\t\t\tobjectId: sObjectId,\n\t\t\t\tVornr: sVornr,\n\t\t\t\tAufnr: sAufnr,\n\t\t\t\tMatnr: sMatnr\n\t\t\t}, bReplace);\n\t\t},\n\n\t\t_updateListItemCount: function(iTotalItems) {\n\t\t\tvar sTitle;\n\t\t\t// only update the counter if the length is final\n\t\t\tif (this._oList.getBinding(\"items\").isLengthFinal()) {\n\t\t\t\tsTitle = this.getResourceBundle().getText(\"masterTitleCount\", [iTotalItems]);\n\t\t\t\tthis.getModel(\"masterView\").setProperty(\"/title\", sTitle);\n\t\t\t}\n\t\t},\n\n\t\t_applyFilterSearch: function() {\n\t\t\tvar aFilters = this._oListFilterState.aSearch.concat(this._oListFilterState.aFilter),\n\t\t\t\toViewModel = this.getModel(\"masterView\");\n\t\t\tthis._oList.getBinding(\"items\").filter(aFilters, \"Application\");\n\t\t\t// changes the noDataText of the list in case there are no filter results\n\t\t\tif (aFilters.length !== 0) {\n\t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataWithFilterOrSearchText\"));\n\t\t\t} else if (this._oListFilterState.aSearch.length > 0) {\n\t\t\t\t// only reset the no data text to default when no new search was triggered\n\t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataText\"));\n\t\t\t}\n\t\t},\n\n\t\t_applyGroupSort: function(aSorters) {\n\t\t\tthis._oList.getBinding(\"items\").sort(aSorters);\n\t\t},\n\n\t\t_updateFilterBar: function(sFilterBarText) {\n\t\t\tvar oViewModel = this.getModel(\"masterView\");\n\t\t\toViewModel.setProperty(\"/isFilterBarVisible\", (this._oListFilterState.aFilter.length > 0));\n\t\t\toViewModel.setProperty(\"/filterBarLabel\", this.getResourceBundle().getText(\"masterFilterBarText\", [sFilterBarText]));\n\t\t},\n\n\t\tScanBarcode: function(oEvent) {\n\n\t\t\tjQuery.sap.require(\"sap.ndc.BarcodeScanner\");\n\n\t\t\tvar list = this.getView().byId(\"list\");\n\t\t\tvar oBinding = list.getBinding(\"items\");\n\n\t\t\tvar oSearchField = this.getView().byId(\"searchField\");\n\n\t\t\tsap.ndc.BarcodeScanner.scan(\n\n\t\t\t\tfunction(oResult) {\n\n\t\t\t\t\t// / * process scan result * /\n\t\t\t\t\tsap.m.MessageToast.show(oResult.text);\n\t\t\t\t\toSearchField.setValue(oResult.text);\n\t\t\t\t\tthis.searchScanValue(oResult.text);\n\t\t\t\t\t//\toCurrent.doFilter(oResult.text);\n\n\t\t\t\t},\n\n\t\t\t\tfunction(oError) {\n\t\t\t\t\t// / * handle scan error * /\n\t\t\t\t\tsap.m.MessageToast.show(\"Scanner not available\");\n\n\t\t\t\t},\n\n\t\t\t\tfunction(oResult) {\n\n\t\t\t\t\t// / * process scan result * /\n\t\t\t\t\tsap.m.MessageToast.show(oResult.text);\n\t\t\t\t\toSearchField.setValue(oResult.text);\n\t\t\t\t\tthis.searchScanValue(oResult.text);\n\n\t\t\t\t});\n\n\t\t},\n\n\t\tsearchScanValue: function(sQuery) {\n\n\t\t\tif (sQuery) {\n\t\t\t\tthis._oListFilterState.aSearch = [new Filter(\"Aufnr\", FilterOperator.Contains, sQuery)];\n\t\t\t} else {\n\t\t\t\tthis._oListFilterState.aSearch = [];\n\t\t\t}\n\t\t\tthis._applyFilterSearch();\n\n\t\t}\n\n\t});\n\n});",
		"com/sap/revgrp/Component.js": "sap.ui.define([\n\t\t\"sap/ui/core/UIComponent\",\n\t\t\"sap/ui/Device\",\n\t\t\"com/sap/revgrp/model/models\",\n\t\t\"com/sap/revgrp/controller/ListSelector\",\n\t\t\"com/sap/revgrp/controller/ErrorHandler\"\n\t], function (UIComponent, Device, models, ListSelector, ErrorHandler) {\n\t\t\"use strict\";\n\n\t\treturn UIComponent.extend(\"com.sap.revgrp.Component\", {\n\n\t\t\tmetadata : {\n\t\t\t\tmanifest : \"json\"\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\n\t\t\t * In this method, the device models are set and the router is initialized.\n\t\t\t * @public\n\t\t\t * @override\n\t\t\t */\n\t\t\tinit : function () {\n\t\t\t\tthis.oListSelector = new ListSelector();\n\t\t\t\tthis._oErrorHandler = new ErrorHandler(this);\n\n\t\t\t\t// set the device model\n\t\t\t\tthis.setModel(models.createDeviceModel(), \"device\");\n\n\t\t\t\t// call the base component's init function and create the App view\n\t\t\t\tUIComponent.prototype.init.apply(this, arguments);\n\n\t\t\t\t// create the views based on the url/hash\n\t\t\t\tthis.getRouter().initialize();\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The component is destroyed by UI5 automatically.\n\t\t\t * In this method, the ListSelector and ErrorHandler are destroyed.\n\t\t\t * @public\n\t\t\t * @override\n\t\t\t */\n\t\t\tdestroy : function () {\n\t\t\t\tthis.oListSelector.destroy();\n\t\t\t\tthis._oErrorHandler.destroy();\n\t\t\t\t// call the base component's destroy function\n\t\t\t\tUIComponent.prototype.destroy.apply(this, arguments);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\n\t\t\t * design mode class should be set, which influences the size appearance of some controls.\n\t\t\t * @public\n\t\t\t * @return {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\n\t\t\t */\n\t\t\tgetContentDensityClass : function() {\n\t\t\t\tif (this._sContentDensityClass === undefined) {\n\t\t\t\t\t// check whether FLP has already set the content density class; do nothing in this case\n\t\t\t\t\tif (jQuery(document.body).hasClass(\"sapUiSizeCozy\") || jQuery(document.body).hasClass(\"sapUiSizeCompact\")) {\n\t\t\t\t\t\tthis._sContentDensityClass = \"\";\n\t\t\t\t\t} else if (!Device.support.touch) { // apply \"compact\" mode if touch is not supported\n\t\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCompact\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\n\t\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCozy\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this._sContentDensityClass;\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"com/sap/revgrp/view/Master.view.xml": "<mvc:View controllerName=\"com.sap.revgrp.controller.Master\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:core=\"sap.ui.core\" xmlns=\"sap.m\"\n\txmlns:semantic=\"sap.m.semantic\">\n\t<semantic:MasterPage id=\"page\" title=\"{masterView>/title}\" navButtonPress=\"onNavBack\" showNavButton=\"true\">\n\t\t<semantic:subHeader>\n\t\t\t<Bar id=\"headerBar\">\n\t\t\t\t<contentLeft>\n\t\t\t\t\t<SearchField id=\"searchField\" showRefreshButton=\"{= !${device>/support/touch} }\" tooltip=\"{i18n>masterSearchTooltip}\" width=\"100%\"\n\t\t\t\t\t\tsearch=\"onSearch\"></SearchField>\n\t\t\t\t</contentLeft>\n\t\t\t\t<contentRight>\n\t\t\t\t\t<Button icon=\"sap-icon://camera\" tooltip=\"Scan Bar code\" press=\"ScanBarcode\"/>\n\t\t\t\t</contentRight>\n\t\t\t</Bar>\n\t\t</semantic:subHeader>\n\t\t<PullToRefresh id=\"pullToRefresh\" visible=\"{device>/support/touch}\" refresh=\"onRefresh\"/>\n\t\t<semantic:content>\n\t\t\t<FacetFilter id=\"FacetFilter\" type=\"Light\" visible=\"true\" showReset=\"true\" reset=\"onFacetFilterReset\" showSummaryBar=\"true\">\n\t\t\t\t<lists>\n\t\t\t\t\t<FacetFilterList title=\"{i18n>MASTER_FILTER_ORDERS}\" id=\"BlockingOrdersFilter\" key=\"FacetFilter_BlockingOrder\" \n\t\t\t\t\t\titems=\"{ path: '/OrderSet', sorter: {path: 'Aufnr'} }\" listClose=\"onFacetFilterOrderClose\" listOpen=\"onFacetFilterOrderOpen\">\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<FacetFilterItem selected=\"false\" key=\"{Aufnr}\" text=\"{Aufnr}\"/>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</FacetFilterList>\n\t\t\t\t\t<FacetFilterList title=\"{i18n>MASTER_FILTER_WRKCENT}\" id=\"BlockingWorkCenterFilter\" key=\"{Arbpl}\"\n\t\t\t\t\t\titems=\"{ path: '/WorkCenterSet', sorter: {path: 'Ktext'} }\" listClose=\"onFacetFilterWrkcentClose\" listOpen=\"onFacetFilterWrkcentOpen\">\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<FacetFilterItem text=\"{Ktext}\" key=\"{Arbpl}\"/>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</FacetFilterList>\n\t\t\t\t\t<FacetFilterList title=\"{i18n>MASTER_FILTER_MATNR}\" id=\"BlockingMaterialFilter\" key=\"FacetFilter_BlockingMaterial\"\n\t\t\t\t\t\titems=\"{ path: '/MaterialSet', sorter: {path: 'Maktx'} }\" listClose=\"onFacetFilterMatnrClose\" listOpen=\"onFacetFilterMatnrOpen\">\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<FacetFilterItem text=\"{Maktx}\" key=\"{Matnr}\"/>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</FacetFilterList>\n\t\t\t\t\t<FacetFilterList title=\"{i18n>MASTER_FILTER_BATCHNR}\" id=\"BlockingBatchFilter\" key=\"FacetFilter_BlockingBatch\"\n\t\t\t\t\t\titems=\"{ path: '/BatchSet', sorter: {path: 'Charg'} }\" listClose=\"onFacetFilterBatchnrClose\" listOpen=\"onFacetFilterBatchnrOpen\">\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<FacetFilterItem text=\"{Charg}\" key=\"{Charg}\"/>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</FacetFilterList>\n\t\t\t\t</lists>\n\t\t\t</FacetFilter>\n\t\t\t<!-- For client side filtering add this to the items attribute:  parameters: {operationMode: 'Client'}}\" -->\n\t\t\t<List id=\"list\"\n\t\t\t\titems=\"{ path: '/OpeninspectionlistSet', sorter: { path: 'Prueflos', descending: false }, groupHeaderFactory: '.createGroupHeader' }\"\n\t\t\t\tbusyIndicatorDelay=\"{masterView>/delay}\" noDataText=\"{masterView>/noDataText}\"\n\t\t\t\tmode=\"{= ${device>/system/phone} ? 'None' : 'SingleSelectMaster'}\" growing=\"true\" growingScrollToLoad=\"true\"\n\t\t\t\tupdateFinished=\"onUpdateFinished\" selectionChange=\"onSelectionChange\">\n\t\t\t\t<infoToolbar>\n\t\t\t\t\t<Toolbar active=\"true\" id=\"filterBar\" visible=\"{masterView>/isFilterBarVisible}\" press=\"onOpenViewSettings\">\n\t\t\t\t\t\t<Title id=\"filterBarLabel\" text=\"{masterView>/filterBarLabel}\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</infoToolbar>\n\t\t\t\t<items>\n\t\t\t\t\t<ObjectListItem type=\"{= ${device>/system/phone} ? 'Active' : 'Inactive'}\" press=\"onSelectionChange\" intro=\"{i18n>inspectionlot}\"\n\t\t\t\t\t\ttitle=\"{Prueflos}\">\n\t\t\t\t\t\t<!-- Extends the beginning of the master list item -->\n\t\t\t\t\t\t<attributes>\n\t\t\t\t\t\t\t<ObjectAttribute id=\"OrderNumber\" text=\"{i18n>orderNumber} : {Aufnr}\"/>\n\t\t\t\t\t\t</attributes>\n\t\t\t\t\t\t<attributes>\n\t\t\t\t\t\t\t<ObjectAttribute id=\"ActivityNumber\" text=\"{i18n>activityNumber} : {Vornr} - {Ltxa1}\"/>\n\t\t\t\t\t\t</attributes>\n\t\t\t\t\t\t<attributes>\n\t\t\t\t\t\t\t<ObjectAttribute id=\"MaterialNumber\" text=\"{i18n>materialNumber} : {Matnr} - {Maktx}\"/>\n\t\t\t\t\t\t</attributes>\n\t\t\t\t\t</ObjectListItem>\n\t\t\t\t</items>\n\t\t\t</List>\n\t\t</semantic:content>\n\t</semantic:MasterPage>\n</mvc:View>",
		"com/sap/revgrp/view/AddDefect.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:s=\"sap.ui.comp.smartfield\" xmlns=\"sap.m\"\n\txmlns:u=\"sap.m.UploadCollectionParameter\" xmlns:f=\"sap.ui.layout.form\" xmlns:layout=\"sap.ui.layout\"\n\tcontrollerName=\"com.sap.revgrp.controller.AddDefect\" xmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<Page id=\"AddDefect\" title=\"{i18n>AddDefectList}\">\n\t\t<f:Form id=\"DefectRecord\" editable=\"true\" ariaLabelledBy=\"Title1\">\n\t\t\t<f:layout>\n\t\t\t\t<f:ResponsiveGridLayout/>\n\t\t\t</f:layout>\n\t\t\t<f:formContainers>\n\t\t\t\t<f:FormContainer id=\"AddDefectContainer\" ariaLabelledBy=\"Title2\">\n\t\t\t\t\t<f:toolbar>\n\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t<Title id=\"Title2\" text=\"Information\" level=\"H5\" titleStyle=\"H5\"/>\n\t\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t</f:toolbar>\n\t\t\t\t\t<f:formElements>\n\t\t\t\t\t\t<f:FormElement label=\"Characteristic\">\n\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t<Input value=\"{Merknr}\" id=\"Characteristic\" editable=\"false\" width=\"400px\"/>\n\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t<f:FormElement label=\"Defect Line No\">\n\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t<Input value=\"{Fenum}\" id=\"Fenum\" editable=\"false\" width=\"400px\"/>\n\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t<f:FormElement label=\"Operator\">\n\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t<Input value=\"{Pruefer}\" width=\"400px\" editable=\"false\" id=\"Operation\"/>\n\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t<f:FormElement label=\"Defect\">\n\t\t\t\t\t\t\t<ComboBox id=\"DefectCodeSet\" showSecondaryValues=\"true\" width=\"400px\" items=\"{ path: '/DefectCodeSet', sorter: {path: 'Code'} }\"\n\t\t\t\t\t\t\t\tselectionChange=\"OnSelectionDefectChanged\">\n\t\t\t\t\t\t\t\t<core:ListItem key=\"{Code}\" text=\"{Kurztext}\" additionalText=\"{Codegruppe}\"/>\n\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t<f:FormElement label=\"Defect Location\">\n\t\t\t\t\t\t\t<ComboBox id=\"DefectLocCodeSet\" showSecondaryValues=\"true\" width=\"400px\" items=\"{ path: '/DefectLocCodeSet', sorter: {path: 'Code'} }\"\n\t\t\t\t\t\t\t\tselectionChange=\"OnSelectionLocationChanged\">\n\t\t\t\t\t\t\t\t<core:ListItem key=\"{Code}\" text=\"{Kurztext}\" additionalText=\"{Codegruppe}\"/>\n\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t<f:FormElement label=\"Quantity\">\n\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t<Input id=\"Quantity\" type=\"Number\" placeholder=\"Enter Quantity.....\" value=\"{DefectQty}\" width=\"400px\"/>\n\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t<f:FormElement label=\"Comments\">\n\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t<Input id=\"Comments\" placeholder=\"Enter Comments....\" value=\"{Maschine}\"/>\n\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t</f:formElements>\n\t\t\t\t</f:FormContainer>\n\t\t\t\t<f:FormContainer ariaLabelledBy=\"Title2\">\n\t\t\t\t\t<f:formElements>\n\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t<UploadCollection id=\"UploadCollection\" tooltip=\"Upload your file to the local Server\" multiple=\"false\"\n\t\t\t\t\t\t\t\tuploadUrl=\"/sap/opu/odata/sap/ZQM_INSPECTION_RESULTS_SRV/DefectResultSet(Fenum='{Fenum}',Prueflos='{Prueflos}',Werk='{Werk}',Vornr='{Vornr}',Aufnr='{Aufnr}',Matnr='{Matnr}',Merknr='{Merknr}')/Attachment\"\n\t\t\t\t\t\t\t\tnumberOfAttachmentsText=\"Image Attachment\" noDataText=\"Please attach defect image\" items=\"{Attachment}\" change=\"onChange\" fileType=\"jpg,png\"\n\t\t\t\t\t\t\t\ttypeMissmatch=\"onTypeMissmatch\" uploadComplete=\"onUploadComplete\" beforeUploadStarts=\"onBeforeUploadStarts\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<UploadCollectionItem fileName=\"{Content}\" mimeType=\"{mimeType}\"></UploadCollectionItem>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</UploadCollection>\n\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t</f:formElements>\n\t\t\t\t</f:FormContainer>\n\t\t\t</f:formContainers>\n\t\t</f:Form>\n\t\t<footer>\n\t\t\t<Toolbar>\n\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t<Button id=\"SaveDefectData\" text=\"Add\" type=\"Accept\" press=\"onSaveDefectButtonPressed\"></Button>\n\t\t\t\t<!--<Button id=\"Button\" text=\"Upload Image\" type=\"Emphasized\" press=\"onStartUpload\"></Button>-->\n\t\t\t</Toolbar>\n\t\t</footer>\n\t</Page>\n</mvc:View>",
		"com/sap/revgrp/controller/ErrorHandler.js": "sap.ui.define([\n\t\"sap/ui/base/Object\",\n\t\"sap/m/MessageBox\"\n], function(UI5Object, MessageBox) {\n\t\"use strict\";\n\n\treturn UI5Object.extend(\"com.sap.revgrp.controller.ErrorHandler\", {\n\n\t\t/**\n\t\t * Handles application errors by automatically attaching to the model events and displaying errors when needed.\n\t\t * @class\n\t\t * @param {sap.ui.core.UIComponent} oComponent reference to the app's component\n\t\t * @public\n\t\t * @alias com.sap.revgrp.controller.ErrorHandler\n\t\t */\n\t\tconstructor: function(oComponent) {\n\t\t\tthis._oResourceBundle = oComponent.getModel(\"i18n\").getResourceBundle();\n\t\t\tthis._oComponent = oComponent;\n\t\t\tthis._oModel = oComponent.getModel();\n\t\t\tthis._bMessageOpen = false;\n\t\t\tthis._sErrorText = this._oResourceBundle.getText(\"errorText\");\n\n\t\t\tthis._oModel.attachMetadataFailed(function(oEvent) {\n\t\t\t\tvar oParams = oEvent.getParameters();\n\n\t\t\t\tthis._showMetadataError(oParams.response);\n\t\t\t}, this);\n\n\t\t\tthis._oModel.attachRequestFailed(function(oEvent) {\n\t\t\t\tvar i, oText;\n\n\t\t\t\tvar oParams = oEvent.getParameters();\n\n\t\t\t\tvar oSource = oEvent.getSource();\n\t\t\t\tvar oMessages = oSource.getMessagesByPath(\"/DefectResultSet\");\n\n\t\t\t\tfor (i = 0; i < oMessages.length; i++) {\n\n\t\t\t\t\tif (i == 0 ) {\n\t\t\t\t\t\toText = oMessages[i].message;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// An entity that was not found in the service is also throwing a 404 error in oData.\n\t\t\t\t// We already cover this case with a notFound target so we skip it here.\n\t\t\t\t// A request that cannot be sent to the server is a technical error that we have to handle though\n\t\t\t\tif (oParams.response.statusCode !== \"404\" || (oParams.response.statusCode === 404 && oParams.response.responseText.indexOf(\n\t\t\t\t\t\t\"Cannot POST\") === 0)) {\n\n\t\t\t\t\tif (oText === \"\") {\n\t\t\t\t\t\tthis._showServiceError(oParams.response);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._showServiceError(oText);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, this);\n\t\t},\n\n\t\t/**\n\t\t * Shows a {@link sap.m.MessageBox} when the metadata call has failed.\n\t\t * The user can try to refresh the metadata.\n\t\t * @param {string} sDetails a technical error to be displayed on request\n\t\t * @private\n\t\t */\n\t\t_showMetadataError: function(sDetails) {\n\t\t\tMessageBox.error(\n\t\t\t\tthis._sErrorText, {\n\t\t\t\t\tid: \"metadataErrorMessageBox\",\n\t\t\t\t\tdetails: sDetails,\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\n\t\t\t\t\tactions: [MessageBox.Action.RETRY, MessageBox.Action.CLOSE],\n\t\t\t\t\tonClose: function(sAction) {\n\t\t\t\t\t\tif (sAction === MessageBox.Action.RETRY) {\n\t\t\t\t\t\t\tthis._oModel.refreshMetadata();\n\t\t\t\t\t\t}\n\t\t\t\t\t}.bind(this)\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Shows a {@link sap.m.MessageBox} when a service call has failed.\n\t\t * Only the first error message will be display.\n\t\t * @param {string} sDetails a technical error to be displayed on request\n\t\t * @private\n\t\t */\n\t\t_showServiceError: function(sDetails) {\n\t\t\tif (this._bMessageOpen) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._bMessageOpen = true;\n\t\t\tMessageBox.error(\n\t\t\t\tthis._sErrorText, {\n\t\t\t\t\tid: \"serviceErrorMessageBox\",\n\t\t\t\t\tdetails: sDetails,\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\n\t\t\t\t\tactions: [MessageBox.Action.CLOSE],\n\t\t\t\t\tonClose: function() {\n\t\t\t\t\t\tthis._bMessageOpen = false;\n\t\t\t\t\t}.bind(this)\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t});\n\n});",
		"com/sap/revgrp/controller/Detail.controller.js": "/*global location */\nsap.ui.define([\n\t\"com/sap/revgrp/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/m/MessageToast\",\n\t\"com/sap/revgrp/model/formatter\"\n], function(BaseController, JSONModel, MessageToast, formatter) {\n\t\"use strict\";\n\n\treturn BaseController.extend(\"com.sap.revgrp.controller.Detail\", {\n\n\t\tformatter: formatter,\n\n\t\tonInit: function() {\n\n\t\t\tvar oViewModel = new JSONModel({\n\t\t\t\tbusy: false,\n\t\t\t\tdelay: 0,\n\t\t\t\tlineItemListTitle: this.getResourceBundle().getText(\"detailLineItemTableHeading\"),\n\t\t\t\t_oResultText: \"\"\n\t\t\t});\n\n\t\t\tthis.getRouter().getRoute(\"object\").attachPatternMatched(this._onObjectMatched, this);\n\n\t\t\tthis.setModel(oViewModel, \"detailView\");\n\n\t\t\tthis.getOwnerComponent().getModel().metadataLoaded().then(this._onMetadataLoaded.bind(this));\n\n\t\t},\n\n\t\t_onRouteCodeMatched: function(oEvent) {\n\n\t\t\tthis.getModel().metadataLoaded().then(function() {\n\t\t\t\tvar sObjectPath = this.getModel().createKey(\"ResultCodeSet\");\n\n\t\t\t\tthis._bindView(\"/\" + sObjectPath);\n\t\t\t}.bind(this));\n\n\t\t},\n\n\t\t_onObjectMatched: function(oEvent) {\n\t\t\tvar sObjectId = oEvent.getParameter(\"arguments\").objectId;\n\t\t\tvar sVornr = oEvent.getParameter(\"arguments\").Vornr;\n\t\t\tvar sAufnr = oEvent.getParameter(\"arguments\").Aufnr;\n\t\t\tvar sMatnr = oEvent.getParameter(\"arguments\").Matnr;\n\n\t\t\tthis.getModel().metadataLoaded().then(function() {\n\t\t\t\tvar sObjectPath = this.getModel().createKey(\"OpeninspectionlistSet\", {\n\n\t\t\t\t\tPrueflos: sObjectId,\n\t\t\t\t\tVornr: sVornr,\n\t\t\t\t\tAufnr: sAufnr,\n\t\t\t\t\tMatnr: sMatnr\n\t\t\t\t});\n\t\t\t\tthis._bindView(\"/\" + sObjectPath);\n\t\t\t}.bind(this));\n\t\t},\n\n\t\t_bindView: function(sObjectPath) {\n\t\t\t// Set busy indicator during view binding\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\n\n\t\t\t// this.getView().byId(\"InspectionDetailList\").getModel().refresh();\n\n\t\t\t// If the view was not bound yet its not busy, only if the binding requests data it is set to busy again\n\t\t\toViewModel.setProperty(\"/busy\", false);\n\n\t\t\tthis.getView().bindElement({\n\t\t\t\tpath: sObjectPath,\n\t\t\t\tevents: {\n\t\t\t\t\tchange: this._onBindingChange.bind(this),\n\t\t\t\t\tdataRequested: function() {\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", true);\n\t\t\t\t\t},\n\t\t\t\t\tdataReceived: function() {\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t_onBindingChange: function() {\n\t\t\tvar oView = this.getView(),\n\t\t\t\toElementBinding = oView.getElementBinding();\n\n\t\t\t// No data for the binding\n\t\t\tif (!oElementBinding.getBoundContext()) {\n\t\t\t\tthis.getRouter().getTargets().display(\"detailObjectNotFound\");\n\t\t\t\t// if object could not be found, the selection in the master list\n\t\t\t\t// does not make sense anymore.\n\t\t\t\tthis.getOwnerComponent().oListSelector.clearMasterListSelection();\n\t\t\t\treturn;\n\t\t\t} \n\n\t\t\tvar sPath = oElementBinding.getPath(),\n\t\t\t\toResourceBundle = this.getResourceBundle(),\n\t\t\t\toObject = oView.getModel().getObject(sPath),\n\t\t\t\tsObjectId = oObject.Prueflos,\n\t\t\t\tsObjectName = oObject.Prueflos,\n\t\t\t\toViewModel = this.getModel(\"detailView\");\n\n\t\t\tthis.getOwnerComponent().oListSelector.selectAListItem(sPath);\n\n\t\t\toViewModel.setProperty(\"/shareSendEmailSubject\",\n\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectSubject\", [sObjectId]));\n\t\t\toViewModel.setProperty(\"/shareSendEmailMessage\",\n\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectMessage\", [sObjectName, sObjectId, location.href]));\n\t\t},\n\n\t\t_onMetadataLoaded: function() {\n\t\t\t// Store original busy indicator delay for the detail view\n\t\t\tvar iOriginalViewBusyDelay = this.getView().getBusyIndicatorDelay(),\n\t\t\t\toViewModel = this.getModel(\"detailView\");\n\t\t\t//\t\toLineItemTable = this.byId(\"lineItemsList\");\n\t\t\t//\t\tiOriginalLineItemTableBusyDelay = oLineItemTable.getBusyIndicatorDelay();\n\n\t\t\t// Make sure busy indicator is displayed immediately when\n\t\t\t// detail view is displayed for the first time\n\t\t\toViewModel.setProperty(\"/delay\", 0);\n\t\t\toViewModel.setProperty(\"/lineItemTableDelay\", 0);\n\n\t\t\t//\toLineItemTable.attachEventOnce(\"updateFinished\", function() {\n\t\t\t// Restore original busy indicator delay for line item table\n\t\t\t//\t\toViewModel.setProperty(\"/lineItemTableDelay\", iOriginalLineItemTableBusyDelay);\n\t\t\t//\t});\n\n\t\t\t// Binding the view will set it to not busy - so the view is always busy if it is not bound\n\t\t\toViewModel.setProperty(\"/busy\", true);\n\t\t\t// Restore original busy indicator delay for the detail view\n\t\t\toViewModel.setProperty(\"/delay\", iOriginalViewBusyDelay);\n\t\t},\n\n\t\tOnSelectionChanged: function(oEvent) {\n\n\t\t\tvar ochangedItem = oEvent.getParameters(\"selectionChange\").selectedItem;\n\t\t\tvar oChangedItemKey = ochangedItem.getKey();\n\t\t\tvar oChangedCodeGroup = ochangedItem.getProperty(\"additionalText\");\n\n\t\t\t//Get current Model and Object Value\n\t\t\tvar oItem = oEvent.getSource();\n\t\t\tvar oContext = oItem.getBindingContext();\n\t\t\tvar sPath = oContext.getPath();\n\t\t\tvar sObject = oContext.getModel().getProperty(sPath);\n\t\t\tsObject.CodeResult = oChangedItemKey;\n\t\t\tsObject.CodeGrpResult = oChangedCodeGroup;\n\n\t\t\tthis._oResultText = oItem.getValue();\n\n\t\t\t//update Context with update value\n\t\t\tvar oModel = oContext.getModel();\n\t\t\toModel.setProperty(sPath, sObject);\n\t\t\t// this.getView().byId(\"InspectionDetailList\").getModel().refresh();\n\n\t\t},\n\n\t\tonListItemPressed: function(oEvent) {\n\n\t\t\tvar oItem;\n\n\t\t\toItem = oEvent.getSource();\n\n\t\t\tvar sPrueflos = oItem.getBindingContext().getProperty(\"Prueflos\");\n\t\t\tvar sVornr = oItem.getBindingContext().getProperty(\"Vornr\");\n\t\t\tvar sMerknr = oItem.getBindingContext().getProperty(\"Merknr\");\n\t\t\tvar sAufnr = oItem.getBindingContext().getProperty(\"Aufnr\");\n\t\t\tvar sMatnr = oItem.getBindingContext().getProperty(\"Matnr\");\n\n\t\t\tthis.getRouter().navTo(\"defects\", {\n\t\t\t\tPrueflos: sPrueflos,\n\t\t\t\tVornr: sVornr,\n\t\t\t\tMerknr: sMerknr,\n\t\t\t\tAufnr: sAufnr,\n\t\t\t\tMatnr: sMatnr\n\t\t\t}, true);\n\n\t\t},\n\n\t\tonSaveButtonPressed: function(oEvent) {\n\n\t\t\tvar oInspectionList, i, p, oItem, sPath;\n\t\t\tvar oCounter = 2;\n\n\t\t\toInspectionList = this.byId(\"InspectionDetailList\").getItems();\n\n\t\t\tfor (i = 0; i < oInspectionList.length; i++) {\n\n\t\t\t\tsPath = oInspectionList[i].getBindingContextPath();\n\t\t\t\toItem = oInspectionList[i].getBindingContext().getObject();\n\n\t\t\t\tif (oItem.CodeResult !== \"9999\" && oItem.CodeResult !== \"\") {\n\n\t\t\t\t\t// this.getModel().update(sPath, oItem,\n\t\t\t\t\tthis.getModel().create(\"/InspectionDetailSet\", oItem, {\n\n\t\t\t\t\t\t// this.getModel().update(sPath, oItem, {\n\t\t\t\t\t\tsuccess: function() {\n\t\t\t\t\t\t\tMessageToast.show(\"Save was successful\");\n\t\t\t\t\t\t},\n\t\t\t\t\t\terror: function() {\n\t\t\t\t\t\t\tMessageToast.show(\"Save was not successful\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Set countet to null for recounting purpose\n\t\t\t\tvar sValue = 0;\n\n\t\t\t\t//once success, process Defects\n\t\t\t\tfor (p = 0; p < oCounter; p++) {\n\n\t\t\t\t\tvar sNumber = 10;\n\t\t\t\t\tsValue = sValue + sNumber;\n\t\t\t\t\tvar sFenum = \"00\" + sValue;\n\n\t\t\t\t\t// Build Defect Path\n\t\t\t\t\tvar sDefectPath = \"/DefectResultSet(Fenum='\" + sFenum + \"',Prueflos='\" + oItem.Prueflos + \"',Werk='\" + oItem.Werk +\n\t\t\t\t\t\t\"',Vornr='\" + oItem.Vornr + \"',Aufnr='\" + oItem.Aufnr + \"',Matnr='\" + oItem.Matnr + \"',Merknr='\" + oItem.Merknr + \"')\";\n\t\t\t\t\tvar oModel = oInspectionList[i].getModel();\n\t\t\t\t\tvar oContext = oModel.getContext(sDefectPath);\n\t\t\t\t\tvar oDataObject = oModel = oContext.getModel().getData(sDefectPath);\n\n\t\t\t\t\t// var input_data = {\n\n\t\t\t\t\t// \t\"DefImage\": oDataObject.DefImage,\n\t\t\t\t\t// \t\"Fenum\": oDataObject.Fenum,\n\t\t\t\t\t// \t\"Prueflos\": oDataObject.Prueflos,\n\t\t\t\t\t// \t\"Werk\": oDataObject.Werk,\n\t\t\t\t\t// \t\"Vornr\": oDataObject.Vornr,\n\t\t\t\t\t// \t\"Aufnr\": oDataObject.Aufnr,\n\t\t\t\t\t// \t\"Matnr\": oDataObject.Matnr,\n\t\t\t\t\t// \t\"Merknr\": oDataObject.Merknr,\n\t\t\t\t\t// \t\"Pruefer\": oDataObject.Pruefer,\n\t\t\t\t\t// \t\"Maschine\": oDataObject.Maschine,\n\t\t\t\t\t// \t\"CodeResult\": oDataObject.CodeResult,\n\t\t\t\t\t// \t\"CodeGrpResult\": oDataObject.CodeGrpResult,\n\t\t\t\t\t// \t\"CodeDefect\": oDataObject.CodeDefect,\n\t\t\t\t\t// \t\"CodeGrpDefect\": oDataObject.CodeGrpDefect,\n\t\t\t\t\t// \t\"CodeDefLoc\": oDataObject.CodeDefLoc,\n\t\t\t\t\t// \t\"CodeGrpDefLoc\": oDataObject.CodeGrpDefLoc,\n\t\t\t\t\t// \t\"DefectQty\": oDataObject.DefectQty\n\t\t\t\t\t// };\n\n\t\t\t\t\tif (oDataObject !== undefined) {\n\n\t\t\t\t\t\tif (oDataObject.CodeDefect !== \"\" && oDataObject.CodeGrpResult !== \"\") {\n\n\t\t\t\t\t\t\tthis.getModel().create(\"/DefectResultSet\", oDataObject, {\n\n\t\t\t\t\t\t\t\tsuccess: function() {\n\n\t\t\t\t\t\t\t\t\tMessageToast.show(\"Save was succesful\");\n\n\t\t\t\t\t\t\t\t\t//\tNavigation Bak to main Page\n\t\t\t\t\t\t\t\t\tvar oDefectItem = oEvent.getSource();\n\t\t\t\t\t\t\t\t\tvar sPrueflos = oDefectItem.getBindingContext().getProperty(\"Prueflos\");\n\t\t\t\t\t\t\t\t\tvar sVornr = oDefectItem.getBindingContext().getProperty(\"Vornr\");\n\t\t\t\t\t\t\t\t\tvar sMerknr = oDefectItem.getBindingContext().getProperty(\"Merknr\");\n\t\t\t\t\t\t\t\t\tvar sAufnr = oDefectItem.getBindingContext().getProperty(\"Aufnr\");\n\t\t\t\t\t\t\t\t\tvar sMatnr = oDefectItem.getBindingContext().getProperty(\"Matnr\");\n\n\t\t\t\t\t\t\t\t\tthis.getRouter().navTo(\"masterlist\", {\n\t\t\t\t\t\t\t\t\t\tFenum: sFenum,\n\t\t\t\t\t\t\t\t\t\tPrueflos: sPrueflos,\n\t\t\t\t\t\t\t\t\t\tVornr: sVornr,\n\t\t\t\t\t\t\t\t\t\tMerknr: sMerknr,\n\t\t\t\t\t\t\t\t\t\tAufnr: sAufnr,\n\t\t\t\t\t\t\t\t\t\tMatnr: sMatnr\n\t\t\t\t\t\t\t\t\t}, true);\n\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\terror: function() {\n\t\t\t\t\t\t\t\t\tMessageToast.show(\"Save was not succesful\");\n\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t});\n\n});",
		"com/sap/revgrp/controller/Defectlist.controller.js": "/*global location */\r\nsap.ui.define([\r\n\t\"com/sap/revgrp/controller/BaseController\",\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"com/sap/revgrp/model/formatter\",\r\n\t\"sap/m/MessageToast\",\r\n\t\"sap/ui/core/routing/History\"\r\n\r\n], function(BaseController, JSONModel, formatter, MessageToast, History) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"com.sap.revgrp.controller.Defectlist\", {\r\n\t\tformatter: formatter,\r\n\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf com.sap.revgrp.view.Defectlist\r\n\t\t */\r\n\t\tonInit: function() {\r\n\r\n\t\t\tvar oViewModel = new JSONModel();\r\n\t\t\tvar oRouter = this.getRouter();\r\n\r\n\t\t\toRouter.getRoute(\"defects\").attachPatternMatched(this._onRouteMatched, this);\r\n\r\n\t\t\tthis.setModel(oViewModel, \"defectlistView\");\r\n\r\n\t\t\t// Defect Model Copy\r\n\t\t\tthis.oDefectslistModel = new JSONModel();\r\n\t\t\tthis.getView().setModel(this.oDefectslistModel, \"DefectlistData\");\r\n\r\n\t\t},\r\n\r\n\t\t_onRouteMatched: function(oEvent) {\r\n\r\n\t\t\tvar oArgs, oView;\r\n\t\t\toArgs = oEvent.getParameter(\"arguments\");\r\n\t\t\toView = this.getView();\r\n\r\n\t\t\tthis.getModel().metadataLoaded().then(function() {\r\n\t\t\t\tvar sObjectPath = this.getModel().createKey(\"InspectionDetailSet\", {\r\n\r\n\t\t\t\t\tPrueflos: oArgs.Prueflos,\r\n\t\t\t\t\tVornr: oArgs.Vornr,\r\n\t\t\t\t\tMerknr: oArgs.Merknr,\r\n\t\t\t\t\tAufnr: oArgs.Aufnr,\r\n\t\t\t\t\tMatnr: oArgs.Matnr\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis._bindView(\"/\" + sObjectPath);\r\n\r\n\t\t\t}.bind(this));\r\n\t\t},\r\n\r\n\t\t_bindView: function(sObjectPath) {\r\n\t\t\t// Set busy indicator during view binding\r\n\t\t\tvar oViewModel = this.getModel(\"defectlistView\");\r\n\r\n\t\t\t// If the view was not bound yet its not busy, only if the binding requests data it is set to busy again\r\n\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\tvar oDefectlistData = this.getView().getModel(\"DefectlistData\");\r\n\t\t\tvar oDefectlistpath = sObjectPath + \"/DefectResult\";\r\n\t\t\toDefectlistData.setData({\r\n\t\t\t\tpath: oDefectlistpath\r\n\t\t\t});\r\n\r\n\t\t\tthis.getView().bindElement({\r\n\t\t\t\tpath: sObjectPath,\r\n\t\t\t\tevents: {\r\n\t\t\t\t\tchange: this._onBindingChange.bind(this),\r\n\t\t\t\t\tdataRequested: function() {\r\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", true);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdataReceived: function() {\r\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t_onBindingChange: function() {\r\n\t\t\tvar oView = this.getView(),\r\n\t\t\t\toElementBinding = oView.getElementBinding();\r\n\r\n\t\t\t// No data for the binding\r\n\t\t\tif (!oElementBinding.getBoundContext()) {\r\n\t\t\t\tthis.getRouter().getTargets().display(\"detailObjectNotFound\");\r\n\t\t\t\t// if object could not be found, the selection in the master list\r\n\t\t\t\t// does not make sense anymore.\r\n\t\t\t\tthis.getOwnerComponent().oListSelector.clearMasterListSelection();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonNavBack: function(oEvent) {\r\n\t\t\tvar oHistory, sPreviousHash;\r\n\r\n\t\t\toHistory = History.getInstance();\r\n\t\t\tsPreviousHash = oHistory.getPreviousHash();\r\n\r\n\t\t\tif (sPreviousHash !== undefined) {\r\n\t\t\t\thistory.go(-1);\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar oItem;\r\n\r\n\t\t\t\toItem = oEvent.getSource();\r\n\r\n\t\t\t\tvar sPrueflos = oItem.getBindingContext().getProperty(\"Prueflos\");\r\n\t\t\t\tvar sVornr = oItem.getBindingContext().getProperty(\"Vornr\");\r\n\t\t\t\tvar sAufnr = oItem.getBindingContext().getProperty(\"Aufnr\");\r\n\t\t\t\tvar sMatnr = oItem.getBindingContext().getProperty(\"Matnr\");\r\n\r\n\t\t\t\tthis.getRouter().navTo(\"masterlist\", {\r\n\t\t\t\t\tPrueflos: sPrueflos,\r\n\t\t\t\t\tVornr: sVornr,\r\n\t\t\t\t\tAufnr: sAufnr,\r\n\t\t\t\t\tMatnr: sMatnr\r\n\t\t\t\t}, true);\r\n\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonDefectListItemClicked: function(oEvent) {\r\n\r\n\t\t\tvar oItem;\r\n\r\n\t\t\toItem = oEvent.getSource();\r\n\r\n\t\t\tvar sFenum = oItem.getBindingContext().getProperty(\"Fenum\");\r\n\t\t\tvar sPrueflos = oItem.getBindingContext().getProperty(\"Prueflos\");\r\n\t\t\tvar sWerk = oItem.getBindingContext().getProperty(\"Werk\");\r\n\t\t\tvar sVornr = oItem.getBindingContext().getProperty(\"Vornr\");\r\n\t\t\tvar sAufnr = oItem.getBindingContext().getProperty(\"Aufnr\");\r\n\t\t\tvar sMatnr = oItem.getBindingContext().getProperty(\"Matnr\");\r\n\t\t\tvar sMerknr = oItem.getBindingContext().getProperty(\"Merknr\");\r\n\r\n\t\t\tthis.getRouter().navTo(\"addDefect\", {\r\n\t\t\t\tFenum: sFenum,\r\n\t\t\t\tPrueflos: sPrueflos,\r\n\t\t\t\tWerk: sWerk,\r\n\t\t\t\tVornr: sVornr,\r\n\t\t\t\tAufnr: sAufnr,\r\n\t\t\t\tMatnr: sMatnr,\r\n\t\t\t\tMerknr: sMerknr\r\n\t\t\t}, true);\r\n\t\t},\r\n\r\n\t\tonSaveButtonPressed: function(oEvent) {\r\n\r\n\t\t\tvar i, oItem, sPath, oHistory, sPreviousHash;\r\n\r\n\t\t\t// Get Record Value\r\n\r\n\t\t\tvar oDefectItem = oEvent.getSource();\r\n\t\t\tvar oRouter = this.getRouter();\r\n\r\n\t\t\t// get the result Value\r\n\t\t\tvar oContext = this.getView().getBindingContext();\r\n\t\t\tvar oModel = oContext.getModel();\r\n\t\t\tvar oContextPath = oContext.getPath();\r\n\t\t\tvar oData = oModel.getData(oContextPath);\r\n\r\n\t\t\t// Send Defects to Backend\r\n\t\t\tvar olineItemsList = this.byId(\"lineItemsList\").getItems();\r\n\r\n\t\t\tfor (i = 0; i < olineItemsList.length; i++) {\r\n\r\n\t\t\t\tsPath = olineItemsList[i].getBindingContextPath();\r\n\t\t\t\toItem = olineItemsList[i].getBindingContext().getObject();\r\n\r\n\t\t\t\t// Pass Result Value\r\n\t\t\t\toItem.CodeGrpResult = oData.CodeGrpResult;\r\n\t\t\t\toItem.CodeResult = oData.CodeResult;\r\n\r\n\t\t\t\tif (oItem.CodeDefLoc !== \"\" && oItem.CodeDefect !== \"\" && oItem.CodeGrpDefLoc !== \"\" && oItem.CodeGrpDefect !== \"\" && oItem.CodeGrpResult !==\r\n\t\t\t\t\t\"\" && oItem.CodeResult !== \"\" && oItem.DefectQty !== \"\" && oItem.Maschine !== \"\") {\r\n\r\n\t\t\t\t\tthis.getModel().create(\"/DefectResultSet\", oItem, {\r\n\r\n\t\t\t\t\t\tsuccess: function() {\r\n\r\n\t\t\t\t\t\t\tMessageToast.show(\"Save was succesful\");\r\n\r\n\t\t\t\t\t\t\t//\tNavigation Back to main Page\r\n\r\n\t\t\t\t\t\t\tvar sPrueflos = oDefectItem.getBindingContext().getProperty(\"Prueflos\");\r\n\t\t\t\t\t\t\tvar sVornr = oDefectItem.getBindingContext().getProperty(\"Vornr\");\r\n\t\t\t\t\t\t\tvar sAufnr = oDefectItem.getBindingContext().getProperty(\"Aufnr\");\r\n\t\t\t\t\t\t\tvar sMatnr = oDefectItem.getBindingContext().getProperty(\"Matnr\");\r\n\r\n\t\t\t\t\t\t\toRouter.navTo(\"masterlist\", {\r\n\r\n\t\t\t\t\t\t\t\tPrueflos: sPrueflos,\r\n\t\t\t\t\t\t\t\tVornr: sVornr,\r\n\t\t\t\t\t\t\t\tAufnr: sAufnr,\r\n\t\t\t\t\t\t\t\tMatnr: sMatnr\r\n\t\t\t\t\t\t\t}, true);\r\n\r\n\t\t\t\t\t\t\t// \t\t// }\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\terror: function() {\r\n\t\t\t\t\t\t\tMessageToast.show(\"Save was not succesful\");\r\n\t\t\t\t\t\t},\r\n\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"com/sap/revgrp/model/models.js": "sap.ui.define([\n\t\t\"sap/ui/model/json/JSONModel\",\n\t\t\"sap/ui/Device\"\n\t], function (JSONModel, Device) {\n\t\t\"use strict\";\n\n\t\treturn {\n\t\t\tcreateDeviceModel : function () {\n\t\t\t\tvar oModel = new JSONModel(Device);\n\t\t\t\toModel.setDefaultBindingMode(\"OneWay\");\n\t\t\t\treturn oModel;\n\t\t\t}\n\t\t};\n\n\t}\n);",
		"com/sap/revgrp/controller/ListSelector.js": "sap.ui.define([\n\t\t\"sap/ui/base/Object\"\n\t], function (BaseObject) {\n\t\t\"use strict\";\n\n\t\treturn BaseObject.extend(\"com.sap.revgrp.model.ListSelector\", {\n\n\t\t\t/**\n\t\t\t * Provides a convenience API for selecting list items. All the functions will wait until the initial load of the a List passed to the instance by the setBoundMasterList\n\t\t\t * function.\n\t\t\t * @class\n\t\t\t * @public\n\t\t\t * @alias com.sap.revgrp.model.ListSelector\n\t\t\t */\n\n\t\t\tconstructor : function () {\n\t\t\t\tthis._oWhenListHasBeenSet = new Promise(function (fnResolveListHasBeenSet) {\n\t\t\t\t\tthis._fnResolveListHasBeenSet = fnResolveListHasBeenSet;\n\t\t\t\t}.bind(this));\n\t\t\t\t// This promise needs to be created in the constructor, since it is allowed to\n\t\t\t\t// invoke selectItem functions before calling setBoundMasterList\n\t\t\t\tthis.oWhenListLoadingIsDone = new Promise(function (fnResolve, fnReject) {\n\t\t\t\t\t// Used to wait until the setBound masterList function is invoked\n\t\t\t\t\tthis._oWhenListHasBeenSet\n\t\t\t\t\t\t.then(function (oList) {\n\t\t\t\t\t\t\toList.getBinding(\"items\").attachEventOnce(\"dataReceived\",\n\t\t\t\t\t\t\t\tfunction (oData) {\n\t\t\t\t\t\t\t\t\tif (!oData.getParameter(\"data\")) {\n\t\t\t\t\t\t\t\t\t\tfnReject({\n\t\t\t\t\t\t\t\t\t\t\tlist : oList,\n\t\t\t\t\t\t\t\t\t\t\terror : true\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tvar oFirstListItem = oList.getItems()[0];\n\t\t\t\t\t\t\t\t\tif (oFirstListItem) {\n\t\t\t\t\t\t\t\t\t\t// Have to make sure that first list Item is selected\n\t\t\t\t\t\t\t\t\t\t// and a select event is triggered. Like that, the corresponding\n\t\t\t\t\t\t\t\t\t\t// detail page is loaded automatically\n\t\t\t\t\t\t\t\t\t\tfnResolve({\n\t\t\t\t\t\t\t\t\t\t\tlist : oList,\n\t\t\t\t\t\t\t\t\t\t\tfirstListitem : oFirstListItem\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t// No items in the list\n\t\t\t\t\t\t\t\t\t\tfnReject({\n\t\t\t\t\t\t\t\t\t\t\tlist : oList,\n\t\t\t\t\t\t\t\t\t\t\terror : false\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t}.bind(this));\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * A bound list should be passed in here. Should be done, before the list has received its initial data from the server.\n\t\t\t * May only be invoked once per ListSelector instance.\n\t\t\t * @param {sap.m.List} oList The list all the select functions will be invoked on.\n\t\t\t * @public\n\t\t\t */\n\t\t\tsetBoundMasterList : function (oList) {\n\t\t\t\tthis._oList = oList;\n\t\t\t\tthis._fnResolveListHasBeenSet(oList);\n\t\t\t},\n\n\n\t\t\t/**\n\t\t\t * Tries to select and scroll to a list item with a matching binding context. If there are no items matching the binding context or the ListMode is none,\n\t\t\t * no selection/scrolling will happen\n\t\t\t * @param {string} sBindingPath the binding path matching the binding path of a list item\n\t\t\t * @public\n\t\t\t */\n\t\t\tselectAListItem : function (sBindingPath) {\n\n\t\t\t\tthis.oWhenListLoadingIsDone.then(\n\t\t\t\t\tfunction () {\n\t\t\t\t\t\tvar oList = this._oList,\n\t\t\t\t\t\t\toSelectedItem;\n\n\t\t\t\t\t\tif (oList.getMode() === \"None\") {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toSelectedItem = oList.getSelectedItem();\n\n\t\t\t\t\t\t// skip update if the current selection is already matching the object path\n\t\t\t\t\t\tif (oSelectedItem && oSelectedItem.getBindingContext().getPath() === sBindingPath) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toList.getItems().some(function (oItem) {\n\t\t\t\t\t\t\tif (oItem.getBindingContext() && oItem.getBindingContext().getPath() === sBindingPath) {\n\t\t\t\t\t\t\t\toList.setSelectedItem(oItem);\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}.bind(this),\n\t\t\t\t\tfunction () {\n\t\t\t\t\t\tjQuery.sap.log.warning(\"Could not select the list item with the path\" + sBindingPath + \" because the list encountered an error or had no items\");\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t},\n\n\n\t\t\t/* =========================================================== */\n\t\t\t/* Convenience Functions for List Selection Change Event       */\n\t\t\t/* =========================================================== */\n\n\t\t\t/**\n\t\t\t * Attaches a listener and listener function to the ListSelector's bound master list. By using\n\t\t\t * a promise, the listener is added, even if the list is not available when 'attachListSelectionChange'\n\t\t\t * is called.\n\t\t\t * @param {function} fnFunction the function to be executed when the list fires a selection change event\n\t\t\t * @param {function} oListener the listener object\n\t\t\t * @return {com.sap.revgrp.model.ListSelector} the list selector object for method chaining\n\t\t\t * @public\n\t\t\t */\n\t\t\tattachListSelectionChange : function (fnFunction, oListener) {\n\t\t\t\tthis._oWhenListHasBeenSet.then(function () {\n\t\t\t\t\tthis._oList.attachSelectionChange(fnFunction, oListener);\n\t\t\t\t}.bind(this));\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Detaches a listener and listener function from the ListSelector's bound master list. By using\n\t\t\t * a promise, the listener is removed, even if the list is not available when 'detachListSelectionChange'\n\t\t\t * is called.\n\t\t\t * @param {function} fnFunction the function to be executed when the list fires a selection change event\n\t\t\t * @param {function} oListener the listener object\n\t\t\t * @return {com.sap.revgrp.model.ListSelector} the list selector object for method chaining\n\t\t\t * @public\n\t\t\t */\n\t\t\tdetachListSelectionChange : function (fnFunction, oListener) {\n\t\t\t\tthis._oWhenListHasBeenSet.then(function () {\n\t\t\t\t\tthis._oList.detachSelectionChange(fnFunction, oListener);\n\t\t\t\t}.bind(this));\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Removes all selections from master list.\n\t\t\t * Does not trigger 'selectionChange' event on master list, though.\n\t\t\t * @public\n\t\t\t */\n\t\t\tclearMasterListSelection : function () {\n\t\t\t\t//use promise to make sure that 'this._oList' is available\n\t\t\t\tthis._oWhenListHasBeenSet.then(function () {\n\t\t\t\t\tthis._oList.removeSelections(true);\n\t\t\t\t}.bind(this));\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"com/sap/revgrp/localService/mockserver.js": "sap.ui.define([\n\t\t\"sap/ui/core/util/MockServer\"\n\t], function (MockServer) {\n\t\t\"use strict\";\n\n\t\tvar oMockServer,\n\t\t\t_sAppModulePath = \"com/sap/revgrp/\",\n\t\t\t_sJsonFilesModulePath = _sAppModulePath + \"localService/mockdata\";\n\n\t\treturn {\n\t\t\t/**\n\t\t\t * Initializes the mock server.\n\t\t\t * You can configure the delay with the URL parameter \"serverDelay\".\n\t\t\t * The local mock data in this folder is returned instead of the real data for testing.\n\t\t\t * @public\n\t\t\t */\n\n\t\t\tinit : function () {\n\t\t\t\tvar oUriParameters = jQuery.sap.getUriParameters(),\n\t\t\t\t\tsJsonFilesUrl = jQuery.sap.getModulePath(_sJsonFilesModulePath),\n\t\t\t\t\tsManifestUrl = jQuery.sap.getModulePath(_sAppModulePath + \"manifest\", \".json\"),\n\t\t\t\t\tsEntity = \"OpeninspectionlistSet\",\n\t\t\t\t\tsErrorParam = oUriParameters.get(\"errorType\"),\n\t\t\t\t\tiErrorCode = sErrorParam === \"badRequest\" ? 400 : 500,\n\t\t\t\t\toManifest = jQuery.sap.syncGetJSON(sManifestUrl).data,\n\t\t\t\t\toMainDataSource = oManifest[\"sap.app\"].dataSources.mainService,\n\t\t\t\t\tsMetadataUrl = jQuery.sap.getModulePath(_sAppModulePath + oMainDataSource.settings.localUri.replace(\".xml\", \"\"), \".xml\"),\n\t\t\t\t\t// ensure there is a trailing slash\n\t\t\t\t\tsMockServerUrl = /.*\\/$/.test(oMainDataSource.uri) ? oMainDataSource.uri : oMainDataSource.uri + \"/\";\n\n\t\t\t\toMockServer = new MockServer({\n\t\t\t\t\trootUri : sMockServerUrl\n\t\t\t\t});\n\n\t\t\t\t// configure mock server with a delay of 1s\n\t\t\t\tMockServer.config({\n\t\t\t\t\tautoRespond : true,\n\t\t\t\t\tautoRespondAfter : (oUriParameters.get(\"serverDelay\") || 1000)\n\t\t\t\t});\n\n\t\t\t\toMockServer.simulate(sMetadataUrl, {\n\t\t\t\t\tsMockdataBaseUrl : sJsonFilesUrl,\n\t\t\t\t\tbGenerateMissingMockData : true\n\t\t\t\t});\n\n\t\t\t\tvar aRequests = oMockServer.getRequests(),\n\t\t\t\t\tfnResponse = function (iErrCode, sMessage, aRequest) {\n\t\t\t\t\t\taRequest.response = function(oXhr){\n\t\t\t\t\t\t\toXhr.respond(iErrCode, {\"Content-Type\": \"text/plain;charset=utf-8\"}, sMessage);\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\n\t\t\t\t// handling the metadata error test\n\t\t\t\tif (oUriParameters.get(\"metadataError\")) {\n\t\t\t\t\taRequests.forEach( function ( aEntry ) {\n\t\t\t\t\t\tif (aEntry.path.toString().indexOf(\"$metadata\") > -1) {\n\t\t\t\t\t\t\tfnResponse(500, \"metadata Error\", aEntry);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Handling request errors\n\t\t\t\tif (sErrorParam) {\n\t\t\t\t\taRequests.forEach( function ( aEntry ) {\n\t\t\t\t\t\tif (aEntry.path.toString().indexOf(sEntity) > -1) {\n\t\t\t\t\t\t\tfnResponse(iErrorCode, sErrorParam, aEntry);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\toMockServer.start();\n\n\t\t\t\tjQuery.sap.log.info(\"Running the app with mock data\");\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @public returns the mockserver of the app, should be used in integration tests\n\t\t\t * @returns {sap.ui.core.util.MockServer} the mockserver instance\n\t\t\t */\n\t\t\tgetMockServer : function () {\n\t\t\t\treturn oMockServer;\n\t\t\t}\n\t\t};\n\n\t}\n);",
		"com/sap/revgrp/controller/App.controller.js": "sap.ui.define([\n\t\t\"com/sap/revgrp/controller/BaseController\",\n\t\t\"sap/ui/model/json/JSONModel\"\n\t], function (BaseController, JSONModel) {\n\t\t\"use strict\";\n\n\t\treturn BaseController.extend(\"com.sap.revgrp.controller.App\", {\n\n\t\t\tonInit : function () {\n\t\t\t\tvar oViewModel,\n\t\t\t\t\tfnSetAppNotBusy,\n\t\t\t\t\toListSelector = this.getOwnerComponent().oListSelector,\n\t\t\t\t\tiOriginalBusyDelay = this.getView().getBusyIndicatorDelay();\n\n\t\t\t\toViewModel = new JSONModel({\n\t\t\t\t\tbusy : true,\n\t\t\t\t\tdelay : 0\n\t\t\t\t});\n\t\t\t\tthis.setModel(oViewModel, \"appView\");\n\n\t\t\t\tfnSetAppNotBusy = function() {\n\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\n\t\t\t\t};\n\n\t\t\t\tthis.getOwnerComponent().getModel().metadataLoaded()\n\t\t\t\t\t\t.then(fnSetAppNotBusy);\n\n\t\t\t\t// Makes sure that master view is hidden in split app\n\t\t\t\t// after a new list entry has been selected.\n\t\t\t\toListSelector.attachListSelectionChange(function () {\n\t\t\t\t\tthis.byId(\"idAppControl\").hideMaster();\n\t\t\t\t}, this);\n\n\t\t\t\t// apply content density mode to root view\n\t\t\t\tthis.getView().addStyleClass(this.getOwnerComponent().getContentDensityClass());\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"com/sap/revgrp/view/App.view.xml": "<mvc:View\n\t\tcontrollerName=\"com.sap.revgrp.controller.App\"\n\t\txmlns:mvc=\"sap.ui.core.mvc\"\n\t\tdisplayBlock=\"true\"\n\t\tbusy=\"{appView>/busy}\"\n\t\tbusyIndicatorDelay=\"{appView>/delay}\"\n\t\txmlns=\"sap.m\">\n\t<SplitApp id=\"idAppControl\" />\n</mvc:View>",
		"com/sap/revgrp/view/DetailObjectNotFound.view.xml": "<mvc:View\n\t\tcontrollerName=\"com.sap.revgrp.controller.BaseController\"\n\t\txmlns:mvc=\"sap.ui.core.mvc\"\n\t\txmlns=\"sap.m\">\n\n\t<MessagePage\n\t\t\tid=\"page\"\n\t\t\ttitle=\"{i18n>detailTitle}\"\n\t\t\ttext=\"{i18n>noObjectFoundText}\"\n\t\t\ticon=\"{sap-icon://product}\"\n\t\t\tdescription=\"\"\n\t\t\tshowNavButton=\"{device>/system/phone}\"\n\t\t\tnavButtonPress=\"onNavBack\">\n\t</MessagePage>\n\n</mvc:View>",
		"com/sap/revgrp/view/Defectlist.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" controllerName=\"com.sap.revgrp.controller.Defectlist\"\n\txmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<Page id=\"DefectList\" title=\"{i18n>DefectList}\" showNavButton=\"true\" navButtonPress=\"onNavBack\">\n\t\t<content>\n\t\t\t<ObjectHeader id=\"objectHeader\" title=\"{i18n>characteristics} : {Merknr} - {Kurztext}\">\n\t\t\t\t<attributes>\n\t\t\t\t\t<ObjectAttribute text=\"{{i18n>inspectionlot} : {Prueflos}\"/>\n\t\t\t\t\t<ObjectAttribute text=\"{Werk} / {Matnr} / {Vornr} - {Ltxa1}\"/>\n\t\t\t\t\t<ObjectAttribute text=\"{i18n>orderNumber} : {Aufnr}\"/>\n\t\t\t\t</attributes>\n\t\t\t</ObjectHeader>\n\t\t</content>\n\t\t<Table id=\"lineItemsList\" width=\"auto\" items=\"{DefectResult}\" updateFinished=\"onListUpdateFinished\"\n\t\t\tnoDataText=\"{i18n>DefectLineItemTableNoDataText}\" busyIndicatorDelay=\"{detailView>/lineItemTableDelay}\" select=\"OnDataSelected\" class=\"sapUiResponsiveMargin\">\n\t\t\t<columns>\n\t\t\t\t<Column id=\"DefectDetailscolMerknr\" hAlign=\"Left\" width=\"7em\" demandPopin=\"true\">\n\t\t\t\t\t<Text text=\"{i18n>MerknrColumn}\"/>\n\t\t\t\t</Column>\n\t\t\t\t<Column id=\"DefectDetailscolFenum\" hAlign=\"Left\" minScreenWidth=\"Tablet\" demandPopin=\"true\">\n\t\t\t\t\t<Text text=\"{i18n>CodeResultFenum}\"/>\n\t\t\t\t</Column>\n\t\t\t\t<Column id=\"DefectDetailscomments\" hAlign=\"Left\" minScreenWidth=\"Tablet\" demandPopin=\"true\">\n\t\t\t\t\t<Text text=\"{i18n>DefectCommentsColumn}\"/>\n\t\t\t\t</Column>\n\t\t\t\t<Column id=\"DefectDetailscolDefectQty\" hAlign=\"Left\" demandPopin=\"true\">\n\t\t\t\t\t<Text text=\"{i18n>DefectQtyColumn}\"/>\n\t\t\t\t</Column>\n\t\t\t</columns>\n\t\t\t<items>\n\t\t\t\t<ColumnListItem type=\"Navigation\" press=\"onDefectListItemClicked\">\n\t\t\t\t\t<cells>\n\t\t\t\t\t\t<Text id=\"DefectDetailsMerknr\" text=\"{Merknr}\"/>\n\t\t\t\t\t\t<Text id=\"DefectDetailsFenum\" text=\"{Fenum}\"/>\n\t\t\t\t\t\t<Text id=\"DefectDetailsComments\" text=\"{Maschine}\"/>\n\t\t\t\t\t\t<Text id=\"DefectDetailsDefectQty\" text=\"{DefectQty}\"/>\n\t\t\t\t\t</cells>\n\t\t\t\t</ColumnListItem>\n\t\t\t</items>\n\t\t</Table>\n\t\t<footer>\n\t\t\t<Toolbar>\n\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t<Button id=\"SaveRecordingData\"  text =\"Save\" icon=\"sap-icon://save\" type=\"Accept\" press=\"onSaveButtonPressed\"/>\n\t\t\t</Toolbar>\n\t\t</footer>\n\t</Page>\n</mvc:View>",
		"com/sap/revgrp/view/ViewSettingsDialog.fragment.xml": "<core:FragmentDefinition\n\t\txmlns=\"sap.m\"\n\t\txmlns:core=\"sap.ui.core\">\n\n\t<ViewSettingsDialog\n\t\t\tid=\"viewSettingsDialog\"\n\t\t\tconfirm=\"onConfirmViewSettingsDialog\"\n\t\t\tresetFilters=\"onViewSettingsDialogResetFilters\">\n\t\t<filterItems>\n\t\t\t<ViewSettingsFilterItem\n\t\t\t\t\tid=\"filterItems\"\n\t\t\t\t\ttext=\"{i18n>masterFilterName}\"\n\t\t\t\t\tkey=\"Price\"\n\t\t\t\t\tmultiSelect=\"false\">\n\t\t\t\t<items>\n\t\t\t\t\t<ViewSettingsItem\n\t\t\t\t\t\t\ttext=\"{i18n>masterFilter1}\"\n\t\t\t\t\t\t\tkey=\"Filter1\"\n\t\t\t\t\t\t\tid=\"viewFilter1\"/>\n\t\t\t\t\t<ViewSettingsItem\n\t\t\t\t\t\t\ttext=\"{i18n>masterFilter2}\"\n\t\t\t\t\t\t\tkey=\"Filter2\"\n\t\t\t\t\t\t\tid=\"viewFilter2\"/>\n\t\t\t\t</items>\n\t\t\t</ViewSettingsFilterItem>\n\t\t</filterItems>\n\t</ViewSettingsDialog>\n\n</core:FragmentDefinition>",
		"com/sap/revgrp/view/NotFound.view.xml": "<mvc:View\n\t\tcontrollerName=\"com.sap.revgrp.controller.BaseController\"\n\t\txmlns:mvc=\"sap.ui.core.mvc\"\n\t\txmlns=\"sap.m\">\n\n\t<MessagePage\n\t\t\tid=\"page\"\n\t\t\ttitle=\"{i18n>notFoundTitle}\"\n\t\t\ttext=\"{i18n>notFoundText}\"\n\t\t\ticon=\"{sap-icon://document}\"\n\t\t\tdescription=\"\"\n\t\t\tshowNavButton=\"{device>/system/phone}\"\n\t\t\tnavButtonPress=\"onNavBack\">\n\t</MessagePage>\n\n</mvc:View>",
		"com/sap/revgrp/view/DetailNoObjectsAvailable.view.xml": "<mvc:View\n\t\tcontrollerName=\"com.sap.revgrp.controller.BaseController\"\n\t\txmlns:mvc=\"sap.ui.core.mvc\"\n\t\txmlns=\"sap.m\">\n\n\t<MessagePage\n\t\t\tid=\"page\"\n\t\t\ttitle=\"{i18n>notAvailableViewTitle}\"\n\t\t\ttext=\"{i18n>noObjectsAvailableText}\"\n\t\t\ticon=\"{sap-icon://product}\"\n\t\t\tdescription=\"\"\n\t\t\tshowNavButton=\"{device>/system/phone}\"\n\t\t\tnavButtonPress=\"onNavBack\">\n\t</MessagePage>\n\n</mvc:View>",
		"com/sap/revgrp/view/Detail.view.xml": "<mvc:View controllerName=\"com.sap.revgrp.controller.Detail\" xmlns=\"sap.m\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:core=\"sap.ui.core\"\n\txmlns:semantic=\"sap.m.semantic\">\n\t<semantic:DetailPage id=\"page\" navButtonPress=\"onNavBack\" showNavButton=\"{device>/system/phone}\" title=\"{i18n>detailTitle}\"\n\t\tbusy=\"{detailView>/busy}\" busyIndicatorDelay=\"{detailView>/delay}\">\n\t\t<semantic:content>\n\t\t\t<ObjectHeader id=\"objectHeader\" responsive=\"true\" title=\"{i18n>inspectionlot} : {Prueflos}\">\n\t\t\t\t<attributes>\n\t\t\t\t\t<ObjectAttribute text=\"{Werk} / {Matnr} / {Vornr} - {Ltxa1}\"/>\n\t\t\t\t\t<ObjectAttribute text=\"{i18n>orderNumber} : {Aufnr}\"/>\n\t\t\t\t\t<ObjectAttribute title=\"{i18n>StartDate}\" text=\"{ path: 'Pastrterm', formatter: '.formatter.date' }\" textDirection=\"RTL\"/>\n\t\t\t\t\t<ObjectAttribute title=\"{i18n>EndDate}\" text=\"{ path: 'Paendterm', formatter: '.formatter.date'}\" textDirection=\"RTL\"/>\n\t\t\t\t</attributes>\n\t\t\t</ObjectHeader>\n\t\t\t<IconTabBar id=\"iconTabBar\" class=\"sapUiResponsiveContentPadding\">\n\t\t\t\t<items>\n\t\t\t\t\t<IconTabFilter id=\"iconTabBarFilter1\" icon=\"sap-icon://task\" tooltip=\"{i18n>detailIconTabBarInfo}\">\n\t\t\t\t\t\t<Table id=\"InspectionDetailList\" width=\"auto\" items=\"{InspectionDetail}\" noDataText=\"{i18n>ECNLineItemTableNoDataText}\"\n\t\t\t\t\t\t\tbusyIndicatorDelay=\"{detailView>/lineItemTableDelay}\" class=\"sapUiResponsiveMargin\">\n\t\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t\t<Column id=\"colCharacter\" hAlign=\"Left\" width=\"4em\" demandPopin=\"true\">\n\t\t\t\t\t\t\t\t\t<Text text=\"{i18n>CharacNoIDColumn}\"/>\n\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t<Column id=\"shorttext\" hAlign=\"Left\" minScreenWidth=\"Tablet\" demandPopin=\"true\">\n\t\t\t\t\t\t\t\t\t<Text text=\"{i18n>KurztextIDColumn}\"/>\n\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t<Column id=\"codeKey\" hAlign=\"Left\" minScreenWidth=\"Tablet\" demandPopin=\"true\">\n\t\t\t\t\t\t\t\t\t<Text text=\"{i18n>CodeIDColumn}\"/>\n\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t<Column id=\"specsr\" hAlign=\"Left\" width=\"10em\" demandPopin=\"true\">\n\t\t\t\t\t\t\t\t\t<Text text=\"{i18n>SpecificationIDColumn}\"/>\n\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t<ColumnListItem type=\"Navigation\" press=\"onListItemPressed\">\n\t\t\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t\t\t<Text id=\"sCharNo\" text=\"{Merknr}\"/>\n\t\t\t\t\t\t\t\t\t\t<Text id=\"sText\" text=\"{Kurztext}\"/>\n\t\t\t\t\t\t\t\t\t\t<Text id=\"sCode\" text=\"{CodeResult}\"/>\n\t\t\t\t\t\t\t\t\t\t<ComboBox id=\"ResultCodeCombo\" items=\"{ path: '/ResultCodeSet', sorter: {path: 'Code'} }\" selectionChange=\"OnSelectionChanged\" selectedKey=\"9999\">\n\t\t\t\t\t\t\t\t\t\t\t<core:ListItem key=\"{Code}\" text=\"{Kurztext}\" additionalText=\"{Codegruppe}\"/>\n\t\t\t\t\t\t\t\t\t\t</ComboBox>\n\t\t\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t<IconTabFilter id=\"iconTabBarFilter2\" icon=\"sap-icon://detail-view\" tooltip=\"{i18n>detailIconTabBarECN}\">\n\t\t\t\t\t\t<Table id=\"ECNDetailsList\" width=\"auto\" items=\"{ECNDetails}\" noDataText=\"{i18n>ECNLineItemTableNoDataText}\"\n\t\t\t\t\t\t\tbusyIndicatorDelay=\"{detailView>/lineItemTableDelay}\" class=\"sapUiResponsiveMargin\">\n\t\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t\t<Column id=\"ECNDetailscolAennr\" hAlign=\"Left\" width=\"8em\" demandPopin=\"true\">\n\t\t\t\t\t\t\t\t\t<Text text=\"{i18n>AennrColumn}\"/>\n\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t<Column id=\"ECNDetailscolAetxt\" hAlign=\"Left\" minScreenWidth=\"Tablet\" demandPopin=\"true\">\n\t\t\t\t\t\t\t\t\t<Text text=\"{i18n>AetxtColumn}\"/>\n\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t<Column id=\"ECNDetailscolPartDesc\" hAlign=\"Left\" minScreenWidth=\"Tablet\" demandPopin=\"true\">\n\t\t\t\t\t\t\t\t\t<Text text=\"{i18n>PartDescColumn}\"/>\n\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t<Column id=\"ECNDetailscolChangeInd\" hAlign=\"Left\" minScreenWidth=\"Tablet\" demandPopin=\"true\">\n\t\t\t\t\t\t\t\t\t<Text text=\"{i18n>ChangeIndColumn}\"/>\n\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t<Column id=\"ECNDetailscolChangeTypeColumn\" hAlign=\"Left\" minScreenWidth=\"Tablet\" demandPopin=\"true\">\n\t\t\t\t\t\t\t\t\t<Text text=\"{i18n>ChangeTypeColumn}\"/>\n\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t<Column id=\"ECNDetailscolChangeReason\" hAlign=\"Left\" width=\"4em\" demandPopin=\"true\">\n\t\t\t\t\t\t\t\t\t<Text text=\"{i18n>ChangeReasonColumn}\"/>\n\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t<ColumnListItem>\n\t\t\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t\t\t<Text id=\"ECNDetailsAennr\" text=\"{Aennr}\"/>\n\t\t\t\t\t\t\t\t\t\t<Text id=\"ECNDetailsAetxt\" text=\"{Aetxt}\"/>\n\t\t\t\t\t\t\t\t\t\t<Text id=\"ECNDetailsPartDesc\" text=\"{PartDesc}\"/>\n\t\t\t\t\t\t\t\t\t\t<Text id=\"ECNDetailsChangeInd\" text=\"{ChangeInd}\"/>\n\t\t\t\t\t\t\t\t\t\t<Text id=\"ECNDetailsChangeType\" text=\"{ChangeType}\"/>\n\t\t\t\t\t\t\t\t\t\t<Text id=\"ECNDetailsChangeReason\" text=\"{ChangeReason}\"/>\n\t\t\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t</IconTabFilter>\n\t\t\t\t</items>\n\t\t\t</IconTabBar>\n\t\t</semantic:content>\n\t\t<semantic:customFooterContent>\n\t\t\t<!--<Button id=\"SaveRecordingData\" type=\"Accept\" text=\"Save\" icon=\"sap-icon://save\" press=\"onSaveButtonPressed\"/>-->\n\t\t</semantic:customFooterContent>\n\t</semantic:DetailPage>\n</mvc:View>"
	}
});